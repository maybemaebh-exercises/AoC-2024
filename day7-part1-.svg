<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1030" onload="init(evt)" viewBox="0 0 1200 1030" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1030" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1013.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1013.00"> </text><svg id="frames" x="10" width="1180" total_samples="999999973"><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,003,009 samples, 0.10%)</title><rect x="0.0000%" y="485" width="0.1003%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1003009"/><text x="0.2500%" y="495.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (1,003,009 samples, 0.10%)</title><rect x="0.0000%" y="469" width="0.1003%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1003009"/><text x="0.2500%" y="479.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,003,009 samples, 0.10%)</title><rect x="0.0000%" y="453" width="0.1003%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1003009"/><text x="0.2500%" y="463.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (11,033,099 samples, 1.10%)</title><rect x="0.0000%" y="565" width="1.1033%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="11033099"/><text x="0.2500%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11,033,099 samples, 1.10%)</title><rect x="0.0000%" y="549" width="1.1033%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="11033099"/><text x="0.2500%" y="559.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (11,033,099 samples, 1.10%)</title><rect x="0.0000%" y="533" width="1.1033%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="11033099"/><text x="0.2500%" y="543.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (11,033,099 samples, 1.10%)</title><rect x="0.0000%" y="517" width="1.1033%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="11033099"/><text x="0.2500%" y="527.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (11,033,099 samples, 1.10%)</title><rect x="0.0000%" y="501" width="1.1033%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="11033099"/><text x="0.2500%" y="511.50"></text></g><g><title>core::slice::memchr::memchr (10,030,090 samples, 1.00%)</title><rect x="0.1003%" y="485" width="1.0030%" height="15" fill="rgb(218,30,26)" fg:x="1003009" fg:w="10030090"/><text x="0.3503%" y="495.50"></text></g><g><title>core::slice::memchr::memchr_aligned (10,030,090 samples, 1.00%)</title><rect x="0.1003%" y="469" width="1.0030%" height="15" fill="rgb(220,122,19)" fg:x="1003009" fg:w="10030090"/><text x="0.3503%" y="479.50"></text></g><g><title>core::slice::memchr::memchr_aligned::runtime (7,021,063 samples, 0.70%)</title><rect x="0.4012%" y="453" width="0.7021%" height="15" fill="rgb(250,228,42)" fg:x="4012036" fg:w="7021063"/><text x="0.6512%" y="463.50"></text></g><g><title>core::slice::memchr::memchr_naive (4,012,036 samples, 0.40%)</title><rect x="0.7021%" y="437" width="0.4012%" height="15" fill="rgb(240,193,28)" fg:x="7021063" fg:w="4012036"/><text x="0.9521%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,018,054 samples, 0.60%)</title><rect x="1.2036%" y="517" width="0.6018%" height="15" fill="rgb(216,20,37)" fg:x="12036108" fg:w="6018054"/><text x="1.4536%" y="527.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,018,054 samples, 0.60%)</title><rect x="1.2036%" y="501" width="0.6018%" height="15" fill="rgb(206,188,39)" fg:x="12036108" fg:w="6018054"/><text x="1.4536%" y="511.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (6,018,054 samples, 0.60%)</title><rect x="1.2036%" y="485" width="0.6018%" height="15" fill="rgb(217,207,13)" fg:x="12036108" fg:w="6018054"/><text x="1.4536%" y="495.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (5,015,045 samples, 0.50%)</title><rect x="1.3039%" y="469" width="0.5015%" height="15" fill="rgb(231,73,38)" fg:x="13039117" fg:w="5015045"/><text x="1.5539%" y="479.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (4,012,036 samples, 0.40%)</title><rect x="1.4042%" y="453" width="0.4012%" height="15" fill="rgb(225,20,46)" fg:x="14042126" fg:w="4012036"/><text x="1.6542%" y="463.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1,003,009 samples, 0.10%)</title><rect x="3.3099%" y="453" width="0.1003%" height="15" fill="rgb(210,31,41)" fg:x="33099297" fg:w="1003009"/><text x="3.5599%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1,003,009 samples, 0.10%)</title><rect x="3.3099%" y="437" width="0.1003%" height="15" fill="rgb(221,200,47)" fg:x="33099297" fg:w="1003009"/><text x="3.5599%" y="447.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (18,054,162 samples, 1.81%)</title><rect x="1.8054%" y="517" width="1.8054%" height="15" fill="rgb(226,26,5)" fg:x="18054162" fg:w="18054162"/><text x="2.0554%" y="527.50">&lt;..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (18,054,162 samples, 1.81%)</title><rect x="1.8054%" y="501" width="1.8054%" height="15" fill="rgb(249,33,26)" fg:x="18054162" fg:w="18054162"/><text x="2.0554%" y="511.50">c..</text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (12,036,108 samples, 1.20%)</title><rect x="2.4072%" y="485" width="1.2036%" height="15" fill="rgb(235,183,28)" fg:x="24072216" fg:w="12036108"/><text x="2.6572%" y="495.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (12,036,108 samples, 1.20%)</title><rect x="2.4072%" y="469" width="1.2036%" height="15" fill="rgb(221,5,38)" fg:x="24072216" fg:w="12036108"/><text x="2.6572%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (2,006,018 samples, 0.20%)</title><rect x="3.4102%" y="453" width="0.2006%" height="15" fill="rgb(247,18,42)" fg:x="34102306" fg:w="2006018"/><text x="3.6602%" y="463.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (2,006,018 samples, 0.20%)</title><rect x="3.4102%" y="437" width="0.2006%" height="15" fill="rgb(241,131,45)" fg:x="34102306" fg:w="2006018"/><text x="3.6602%" y="447.50"></text></g><g><title>&lt;core::str::iter::RSplit&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,009,027 samples, 0.30%)</title><rect x="3.8114%" y="421" width="0.3009%" height="15" fill="rgb(249,31,29)" fg:x="38114342" fg:w="3009027"/><text x="4.0614%" y="431.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_back (3,009,027 samples, 0.30%)</title><rect x="3.8114%" y="405" width="0.3009%" height="15" fill="rgb(225,111,53)" fg:x="38114342" fg:w="3009027"/><text x="4.0614%" y="415.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::ReverseSearcher&gt;::next_match_back (3,009,027 samples, 0.30%)</title><rect x="3.8114%" y="389" width="0.3009%" height="15" fill="rgb(238,160,17)" fg:x="38114342" fg:w="3009027"/><text x="4.0614%" y="399.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next_back (3,009,027 samples, 0.30%)</title><rect x="3.8114%" y="373" width="0.3009%" height="15" fill="rgb(214,148,48)" fg:x="38114342" fg:w="3009027"/><text x="4.0614%" y="383.50"></text></g><g><title>&lt;core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy&gt;::matching (2,006,018 samples, 0.20%)</title><rect x="7.7232%" y="245" width="0.2006%" height="15" fill="rgb(232,36,49)" fg:x="77231693" fg:w="2006018"/><text x="7.9732%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (41,123,369 samples, 4.11%)</title><rect x="4.1123%" y="341" width="4.1123%" height="15" fill="rgb(209,103,24)" fg:x="41123369" fg:w="41123369"/><text x="4.3623%" y="351.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (41,123,369 samples, 4.11%)</title><rect x="4.1123%" y="325" width="4.1123%" height="15" fill="rgb(229,88,8)" fg:x="41123369" fg:w="41123369"/><text x="4.3623%" y="335.50">core..</text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (41,123,369 samples, 4.11%)</title><rect x="4.1123%" y="309" width="4.1123%" height="15" fill="rgb(213,181,19)" fg:x="41123369" fg:w="41123369"/><text x="4.3623%" y="319.50">&lt;cor..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (40,120,360 samples, 4.01%)</title><rect x="4.2126%" y="293" width="4.0120%" height="15" fill="rgb(254,191,54)" fg:x="42126378" fg:w="40120360"/><text x="4.4626%" y="303.50">core..</text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (32,096,288 samples, 3.21%)</title><rect x="5.0150%" y="277" width="3.2096%" height="15" fill="rgb(241,83,37)" fg:x="50150450" fg:w="32096288"/><text x="5.2650%" y="287.50">&lt;co..</text></g><g><title>core::str::pattern::TwoWaySearcher::next (30,090,270 samples, 3.01%)</title><rect x="5.2156%" y="261" width="3.0090%" height="15" fill="rgb(233,36,39)" fg:x="52156468" fg:w="30090270"/><text x="5.4656%" y="271.50">cor..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get (3,009,027 samples, 0.30%)</title><rect x="7.9238%" y="245" width="0.3009%" height="15" fill="rgb(226,3,54)" fg:x="79237711" fg:w="3009027"/><text x="8.1738%" y="255.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (3,009,027 samples, 0.30%)</title><rect x="7.9238%" y="229" width="0.3009%" height="15" fill="rgb(245,192,40)" fg:x="79237711" fg:w="3009027"/><text x="8.1738%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::_{{closure}} (45,135,405 samples, 4.51%)</title><rect x="4.1123%" y="405" width="4.5135%" height="15" fill="rgb(238,167,29)" fg:x="41123369" fg:w="45135405"/><text x="4.3623%" y="415.50">&lt;core..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (45,135,405 samples, 4.51%)</title><rect x="4.1123%" y="389" width="4.5135%" height="15" fill="rgb(232,182,51)" fg:x="41123369" fg:w="45135405"/><text x="4.3623%" y="399.50">core:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (45,135,405 samples, 4.51%)</title><rect x="4.1123%" y="373" width="4.5135%" height="15" fill="rgb(231,60,39)" fg:x="41123369" fg:w="45135405"/><text x="4.3623%" y="383.50">core:..</text></g><g><title>aoc_2024_megaproject::problems::day7::Part::evaluate_line::_{{closure}} (45,135,405 samples, 4.51%)</title><rect x="4.1123%" y="357" width="4.5135%" height="15" fill="rgb(208,69,12)" fg:x="41123369" fg:w="45135405"/><text x="4.3623%" y="367.50">aoc_2..</text></g><g><title>core::str::&lt;impl str&gt;::split (4,012,036 samples, 0.40%)</title><rect x="8.2247%" y="341" width="0.4012%" height="15" fill="rgb(235,93,37)" fg:x="82246738" fg:w="4012036"/><text x="8.4747%" y="351.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (3,009,027 samples, 0.30%)</title><rect x="8.3250%" y="325" width="0.3009%" height="15" fill="rgb(213,116,39)" fg:x="83249747" fg:w="3009027"/><text x="8.5750%" y="335.50"></text></g><g><title>core::str::pattern::StrSearcher::new (3,009,027 samples, 0.30%)</title><rect x="8.3250%" y="309" width="0.3009%" height="15" fill="rgb(222,207,29)" fg:x="83249747" fg:w="3009027"/><text x="8.5750%" y="319.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (2,006,018 samples, 0.20%)</title><rect x="8.4253%" y="293" width="0.2006%" height="15" fill="rgb(206,96,30)" fg:x="84252756" fg:w="2006018"/><text x="8.6753%" y="303.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (2,006,018 samples, 0.20%)</title><rect x="8.4253%" y="277" width="0.2006%" height="15" fill="rgb(218,138,4)" fg:x="84252756" fg:w="2006018"/><text x="8.6753%" y="287.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2,006,018 samples, 0.20%)</title><rect x="8.4253%" y="261" width="0.2006%" height="15" fill="rgb(250,191,14)" fg:x="84252756" fg:w="2006018"/><text x="8.6753%" y="271.50"></text></g><g><title>[libc.so.6] (1,003,009 samples, 0.10%)</title><rect x="8.5256%" y="245" width="0.1003%" height="15" fill="rgb(239,60,40)" fg:x="85255765" fg:w="1003009"/><text x="8.7756%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (50,150,450 samples, 5.02%)</title><rect x="3.7111%" y="501" width="5.0150%" height="15" fill="rgb(206,27,48)" fg:x="37111333" fg:w="50150450"/><text x="3.9611%" y="511.50">&lt;core:..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (50,150,450 samples, 5.02%)</title><rect x="3.7111%" y="485" width="5.0150%" height="15" fill="rgb(225,35,8)" fg:x="37111333" fg:w="50150450"/><text x="3.9611%" y="495.50">core::..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (50,150,450 samples, 5.02%)</title><rect x="3.7111%" y="469" width="5.0150%" height="15" fill="rgb(250,213,24)" fg:x="37111333" fg:w="50150450"/><text x="3.9611%" y="479.50">&lt;core:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (50,150,450 samples, 5.02%)</title><rect x="3.7111%" y="453" width="5.0150%" height="15" fill="rgb(247,123,22)" fg:x="37111333" fg:w="50150450"/><text x="3.9611%" y="463.50">&lt;core:..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (50,150,450 samples, 5.02%)</title><rect x="3.7111%" y="437" width="5.0150%" height="15" fill="rgb(231,138,38)" fg:x="37111333" fg:w="50150450"/><text x="3.9611%" y="447.50">core::..</text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (46,138,414 samples, 4.61%)</title><rect x="4.1123%" y="421" width="4.6138%" height="15" fill="rgb(231,145,46)" fg:x="41123369" fg:w="46138414"/><text x="4.3623%" y="431.50">core:..</text></g><g><title>aoc_2024_megaproject::problems::day7::Part::evaluate_line::_{{closure}} (1,003,009 samples, 0.10%)</title><rect x="8.6259%" y="405" width="0.1003%" height="15" fill="rgb(251,118,11)" fg:x="86258774" fg:w="1003009"/><text x="8.8759%" y="415.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (1,003,009 samples, 0.10%)</title><rect x="8.6259%" y="389" width="0.1003%" height="15" fill="rgb(217,147,25)" fg:x="86258774" fg:w="1003009"/><text x="8.8759%" y="399.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for usize&gt;::from_str (1,003,009 samples, 0.10%)</title><rect x="8.6259%" y="373" width="0.1003%" height="15" fill="rgb(247,81,37)" fg:x="86258774" fg:w="1003009"/><text x="8.8759%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::from_str_radix (1,003,009 samples, 0.10%)</title><rect x="8.6259%" y="357" width="0.1003%" height="15" fill="rgb(209,12,38)" fg:x="86258774" fg:w="1003009"/><text x="8.8759%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::from_ascii_radix (1,003,009 samples, 0.10%)</title><rect x="8.6259%" y="341" width="0.1003%" height="15" fill="rgb(227,1,9)" fg:x="86258774" fg:w="1003009"/><text x="8.8759%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::clone::Clone&gt;::clone (2,006,018 samples, 0.20%)</title><rect x="8.8265%" y="485" width="0.2006%" height="15" fill="rgb(248,47,43)" fg:x="88264792" fg:w="2006018"/><text x="9.0765%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::clone::Clone&gt;::clone (1,003,009 samples, 0.10%)</title><rect x="8.9268%" y="469" width="0.1003%" height="15" fill="rgb(221,10,30)" fg:x="89267801" fg:w="1003009"/><text x="9.1768%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::clone::Clone&gt;::clone (1,003,009 samples, 0.10%)</title><rect x="8.9268%" y="453" width="0.1003%" height="15" fill="rgb(210,229,1)" fg:x="89267801" fg:w="1003009"/><text x="9.1768%" y="463.50"></text></g><g><title>&lt;core::str::iter::RSplit&lt;P&gt; as core::clone::Clone&gt;::clone (1,003,009 samples, 0.10%)</title><rect x="8.9268%" y="437" width="0.1003%" height="15" fill="rgb(222,148,37)" fg:x="89267801" fg:w="1003009"/><text x="9.1768%" y="447.50"></text></g><g><title>&lt;core::str::iter::SplitInternal&lt;P&gt; as core::clone::Clone&gt;::clone (1,003,009 samples, 0.10%)</title><rect x="8.9268%" y="421" width="0.1003%" height="15" fill="rgb(234,67,33)" fg:x="89267801" fg:w="1003009"/><text x="9.1768%" y="431.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::clone::Clone&gt;::clone (1,003,009 samples, 0.10%)</title><rect x="8.9268%" y="405" width="0.1003%" height="15" fill="rgb(247,98,35)" fg:x="89267801" fg:w="1003009"/><text x="9.1768%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,003,009 samples, 0.10%)</title><rect x="9.7292%" y="341" width="0.1003%" height="15" fill="rgb(247,138,52)" fg:x="97291873" fg:w="1003009"/><text x="9.9792%" y="351.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1,003,009 samples, 0.10%)</title><rect x="9.7292%" y="325" width="0.1003%" height="15" fill="rgb(213,79,30)" fg:x="97291873" fg:w="1003009"/><text x="9.9792%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (1,003,009 samples, 0.10%)</title><rect x="9.7292%" y="309" width="0.1003%" height="15" fill="rgb(246,177,23)" fg:x="97291873" fg:w="1003009"/><text x="9.9792%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1,003,009 samples, 0.10%)</title><rect x="9.7292%" y="293" width="0.1003%" height="15" fill="rgb(230,62,27)" fg:x="97291873" fg:w="1003009"/><text x="9.9792%" y="303.50"></text></g><g><title>&lt;core::str::iter::RSplit&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,021,063 samples, 0.70%)</title><rect x="9.2277%" y="405" width="0.7021%" height="15" fill="rgb(216,154,8)" fg:x="92276828" fg:w="7021063"/><text x="9.4777%" y="415.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_back (7,021,063 samples, 0.70%)</title><rect x="9.2277%" y="389" width="0.7021%" height="15" fill="rgb(244,35,45)" fg:x="92276828" fg:w="7021063"/><text x="9.4777%" y="399.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::ReverseSearcher&gt;::next_match_back (5,015,045 samples, 0.50%)</title><rect x="9.4283%" y="373" width="0.5015%" height="15" fill="rgb(251,115,12)" fg:x="94282846" fg:w="5015045"/><text x="9.6783%" y="383.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next_back (5,015,045 samples, 0.50%)</title><rect x="9.4283%" y="357" width="0.5015%" height="15" fill="rgb(240,54,50)" fg:x="94282846" fg:w="5015045"/><text x="9.6783%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1,003,009 samples, 0.10%)</title><rect x="9.8295%" y="341" width="0.1003%" height="15" fill="rgb(233,84,52)" fg:x="98294882" fg:w="1003009"/><text x="10.0795%" y="351.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1,003,009 samples, 0.10%)</title><rect x="9.8295%" y="325" width="0.1003%" height="15" fill="rgb(207,117,47)" fg:x="98294882" fg:w="1003009"/><text x="10.0795%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,003,009 samples, 0.10%)</title><rect x="13.3400%" y="229" width="0.1003%" height="15" fill="rgb(249,43,39)" fg:x="133400197" fg:w="1003009"/><text x="13.5900%" y="239.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1,003,009 samples, 0.10%)</title><rect x="13.3400%" y="213" width="0.1003%" height="15" fill="rgb(209,38,44)" fg:x="133400197" fg:w="1003009"/><text x="13.5900%" y="223.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (1,003,009 samples, 0.10%)</title><rect x="13.3400%" y="197" width="0.1003%" height="15" fill="rgb(236,212,23)" fg:x="133400197" fg:w="1003009"/><text x="13.5900%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (36,108,324 samples, 3.61%)</title><rect x="10.0301%" y="325" width="3.6108%" height="15" fill="rgb(242,79,21)" fg:x="100300900" fg:w="36108324"/><text x="10.2801%" y="335.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (36,108,324 samples, 3.61%)</title><rect x="10.0301%" y="309" width="3.6108%" height="15" fill="rgb(211,96,35)" fg:x="100300900" fg:w="36108324"/><text x="10.2801%" y="319.50">core..</text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (36,108,324 samples, 3.61%)</title><rect x="10.0301%" y="293" width="3.6108%" height="15" fill="rgb(253,215,40)" fg:x="100300900" fg:w="36108324"/><text x="10.2801%" y="303.50">&lt;cor..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (36,108,324 samples, 3.61%)</title><rect x="10.0301%" y="277" width="3.6108%" height="15" fill="rgb(211,81,21)" fg:x="100300900" fg:w="36108324"/><text x="10.2801%" y="287.50">core..</text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (30,090,270 samples, 3.01%)</title><rect x="10.6319%" y="261" width="3.0090%" height="15" fill="rgb(208,190,38)" fg:x="106318954" fg:w="30090270"/><text x="10.8819%" y="271.50">&lt;co..</text></g><g><title>core::str::pattern::TwoWaySearcher::next (28,084,252 samples, 2.81%)</title><rect x="10.8325%" y="245" width="2.8084%" height="15" fill="rgb(235,213,38)" fg:x="108324972" fg:w="28084252"/><text x="11.0825%" y="255.50">co..</text></g><g><title>&lt;core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy&gt;::matching (2,006,018 samples, 0.20%)</title><rect x="13.4403%" y="229" width="0.2006%" height="15" fill="rgb(237,122,38)" fg:x="134403206" fg:w="2006018"/><text x="13.6903%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (48,144,432 samples, 4.81%)</title><rect x="9.0271%" y="485" width="4.8144%" height="15" fill="rgb(244,218,35)" fg:x="90270810" fg:w="48144432"/><text x="9.2771%" y="495.50">&lt;core:..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (48,144,432 samples, 4.81%)</title><rect x="9.0271%" y="469" width="4.8144%" height="15" fill="rgb(240,68,47)" fg:x="90270810" fg:w="48144432"/><text x="9.2771%" y="479.50">core::..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (48,144,432 samples, 4.81%)</title><rect x="9.0271%" y="453" width="4.8144%" height="15" fill="rgb(210,16,53)" fg:x="90270810" fg:w="48144432"/><text x="9.2771%" y="463.50">&lt;core:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (48,144,432 samples, 4.81%)</title><rect x="9.0271%" y="437" width="4.8144%" height="15" fill="rgb(235,124,12)" fg:x="90270810" fg:w="48144432"/><text x="9.2771%" y="447.50">&lt;core:..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (47,141,423 samples, 4.71%)</title><rect x="9.1274%" y="421" width="4.7141%" height="15" fill="rgb(224,169,11)" fg:x="91273819" fg:w="47141423"/><text x="9.3774%" y="431.50">core:..</text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (39,117,351 samples, 3.91%)</title><rect x="9.9298%" y="405" width="3.9117%" height="15" fill="rgb(250,166,2)" fg:x="99297891" fg:w="39117351"/><text x="10.1798%" y="415.50">core..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::_{{closure}} (39,117,351 samples, 3.91%)</title><rect x="9.9298%" y="389" width="3.9117%" height="15" fill="rgb(242,216,29)" fg:x="99297891" fg:w="39117351"/><text x="10.1798%" y="399.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (39,117,351 samples, 3.91%)</title><rect x="9.9298%" y="373" width="3.9117%" height="15" fill="rgb(230,116,27)" fg:x="99297891" fg:w="39117351"/><text x="10.1798%" y="383.50">core..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (38,114,342 samples, 3.81%)</title><rect x="10.0301%" y="357" width="3.8114%" height="15" fill="rgb(228,99,48)" fg:x="100300900" fg:w="38114342"/><text x="10.2801%" y="367.50">core..</text></g><g><title>aoc_2024_megaproject::problems::day7::Part::evaluate_line::_{{closure}} (38,114,342 samples, 3.81%)</title><rect x="10.0301%" y="341" width="3.8114%" height="15" fill="rgb(253,11,6)" fg:x="100300900" fg:w="38114342"/><text x="10.2801%" y="351.50">aoc_..</text></g><g><title>core::str::&lt;impl str&gt;::split (2,006,018 samples, 0.20%)</title><rect x="13.6409%" y="325" width="0.2006%" height="15" fill="rgb(247,143,39)" fg:x="136409224" fg:w="2006018"/><text x="13.8909%" y="335.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (2,006,018 samples, 0.20%)</title><rect x="13.6409%" y="309" width="0.2006%" height="15" fill="rgb(236,97,10)" fg:x="136409224" fg:w="2006018"/><text x="13.8909%" y="319.50"></text></g><g><title>core::str::pattern::StrSearcher::new (2,006,018 samples, 0.20%)</title><rect x="13.6409%" y="293" width="0.2006%" height="15" fill="rgb(233,208,19)" fg:x="136409224" fg:w="2006018"/><text x="13.8909%" y="303.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1,003,009 samples, 0.10%)</title><rect x="13.7412%" y="277" width="0.1003%" height="15" fill="rgb(216,164,2)" fg:x="137412233" fg:w="1003009"/><text x="13.9912%" y="287.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (1,003,009 samples, 0.10%)</title><rect x="13.7412%" y="261" width="0.1003%" height="15" fill="rgb(220,129,5)" fg:x="137412233" fg:w="1003009"/><text x="13.9912%" y="271.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,003,009 samples, 0.10%)</title><rect x="13.7412%" y="245" width="0.1003%" height="15" fill="rgb(242,17,10)" fg:x="137412233" fg:w="1003009"/><text x="13.9912%" y="255.50"></text></g><g><title>[libc.so.6] (1,003,009 samples, 0.10%)</title><rect x="13.7412%" y="229" width="0.1003%" height="15" fill="rgb(242,107,0)" fg:x="137412233" fg:w="1003009"/><text x="13.9912%" y="239.50"></text></g><g><title>&lt;core::str::iter::RSplit&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (10,030,090 samples, 1.00%)</title><rect x="14.0421%" y="389" width="1.0030%" height="15" fill="rgb(251,28,31)" fg:x="140421260" fg:w="10030090"/><text x="14.2921%" y="399.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_back (10,030,090 samples, 1.00%)</title><rect x="14.0421%" y="373" width="1.0030%" height="15" fill="rgb(233,223,10)" fg:x="140421260" fg:w="10030090"/><text x="14.2921%" y="383.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::ReverseSearcher&gt;::next_match_back (4,012,036 samples, 0.40%)</title><rect x="14.6439%" y="357" width="0.4012%" height="15" fill="rgb(215,21,27)" fg:x="146439314" fg:w="4012036"/><text x="14.8939%" y="367.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next_back (3,009,027 samples, 0.30%)</title><rect x="14.7442%" y="341" width="0.3009%" height="15" fill="rgb(232,23,21)" fg:x="147442323" fg:w="3009027"/><text x="14.9942%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1,003,009 samples, 0.10%)</title><rect x="14.9448%" y="325" width="0.1003%" height="15" fill="rgb(244,5,23)" fg:x="149448341" fg:w="1003009"/><text x="15.1948%" y="335.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1,003,009 samples, 0.10%)</title><rect x="14.9448%" y="309" width="0.1003%" height="15" fill="rgb(226,81,46)" fg:x="149448341" fg:w="1003009"/><text x="15.1948%" y="319.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (35,105,315 samples, 3.51%)</title><rect x="16.3490%" y="245" width="3.5105%" height="15" fill="rgb(247,70,30)" fg:x="163490467" fg:w="35105315"/><text x="16.5990%" y="255.50">&lt;co..</text></g><g><title>core::str::pattern::TwoWaySearcher::next (32,096,288 samples, 3.21%)</title><rect x="16.6499%" y="229" width="3.2096%" height="15" fill="rgb(212,68,19)" fg:x="166499494" fg:w="32096288"/><text x="16.8999%" y="239.50">cor..</text></g><g><title>&lt;core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy&gt;::matching (5,015,045 samples, 0.50%)</title><rect x="19.3581%" y="213" width="0.5015%" height="15" fill="rgb(240,187,13)" fg:x="193580737" fg:w="5015045"/><text x="19.6081%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (47,141,423 samples, 4.71%)</title><rect x="15.2457%" y="309" width="4.7141%" height="15" fill="rgb(223,113,26)" fg:x="152457368" fg:w="47141423"/><text x="15.4957%" y="319.50">core:..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (47,141,423 samples, 4.71%)</title><rect x="15.2457%" y="293" width="4.7141%" height="15" fill="rgb(206,192,2)" fg:x="152457368" fg:w="47141423"/><text x="15.4957%" y="303.50">core:..</text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (47,141,423 samples, 4.71%)</title><rect x="15.2457%" y="277" width="4.7141%" height="15" fill="rgb(241,108,4)" fg:x="152457368" fg:w="47141423"/><text x="15.4957%" y="287.50">&lt;core..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (46,138,414 samples, 4.61%)</title><rect x="15.3460%" y="261" width="4.6138%" height="15" fill="rgb(247,173,49)" fg:x="153460377" fg:w="46138414"/><text x="15.5960%" y="271.50">core:..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::get_end (1,003,009 samples, 0.10%)</title><rect x="19.8596%" y="245" width="0.1003%" height="15" fill="rgb(224,114,35)" fg:x="198595782" fg:w="1003009"/><text x="20.1096%" y="255.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (1,003,009 samples, 0.10%)</title><rect x="20.1605%" y="245" width="0.1003%" height="15" fill="rgb(245,159,27)" fg:x="201604809" fg:w="1003009"/><text x="20.4105%" y="255.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,003,009 samples, 0.10%)</title><rect x="20.1605%" y="229" width="0.1003%" height="15" fill="rgb(245,172,44)" fg:x="201604809" fg:w="1003009"/><text x="20.4105%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (64,192,576 samples, 6.42%)</title><rect x="14.0421%" y="437" width="6.4193%" height="15" fill="rgb(236,23,11)" fg:x="140421260" fg:w="64192576"/><text x="14.2921%" y="447.50">&lt;core::i..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (64,192,576 samples, 6.42%)</title><rect x="14.0421%" y="421" width="6.4193%" height="15" fill="rgb(205,117,38)" fg:x="140421260" fg:w="64192576"/><text x="14.2921%" y="431.50">&lt;core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (64,192,576 samples, 6.42%)</title><rect x="14.0421%" y="405" width="6.4193%" height="15" fill="rgb(237,72,25)" fg:x="140421260" fg:w="64192576"/><text x="14.2921%" y="415.50">core::it..</text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (54,162,486 samples, 5.42%)</title><rect x="15.0451%" y="389" width="5.4162%" height="15" fill="rgb(244,70,9)" fg:x="150451350" fg:w="54162486"/><text x="15.2951%" y="399.50">core::i..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::_{{closure}} (54,162,486 samples, 5.42%)</title><rect x="15.0451%" y="373" width="5.4162%" height="15" fill="rgb(217,125,39)" fg:x="150451350" fg:w="54162486"/><text x="15.2951%" y="383.50">&lt;core::..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (54,162,486 samples, 5.42%)</title><rect x="15.0451%" y="357" width="5.4162%" height="15" fill="rgb(235,36,10)" fg:x="150451350" fg:w="54162486"/><text x="15.2951%" y="367.50">core::i..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (52,156,468 samples, 5.22%)</title><rect x="15.2457%" y="341" width="5.2156%" height="15" fill="rgb(251,123,47)" fg:x="152457368" fg:w="52156468"/><text x="15.4957%" y="351.50">core::..</text></g><g><title>aoc_2024_megaproject::problems::day7::Part::evaluate_line::_{{closure}} (52,156,468 samples, 5.22%)</title><rect x="15.2457%" y="325" width="5.2156%" height="15" fill="rgb(221,13,13)" fg:x="152457368" fg:w="52156468"/><text x="15.4957%" y="335.50">aoc_20..</text></g><g><title>core::str::&lt;impl str&gt;::split (5,015,045 samples, 0.50%)</title><rect x="19.9599%" y="309" width="0.5015%" height="15" fill="rgb(238,131,9)" fg:x="199598791" fg:w="5015045"/><text x="20.2099%" y="319.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (5,015,045 samples, 0.50%)</title><rect x="19.9599%" y="293" width="0.5015%" height="15" fill="rgb(211,50,8)" fg:x="199598791" fg:w="5015045"/><text x="20.2099%" y="303.50"></text></g><g><title>core::str::pattern::StrSearcher::new (5,015,045 samples, 0.50%)</title><rect x="19.9599%" y="277" width="0.5015%" height="15" fill="rgb(245,182,24)" fg:x="199598791" fg:w="5015045"/><text x="20.2099%" y="287.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (4,012,036 samples, 0.40%)</title><rect x="20.0602%" y="261" width="0.4012%" height="15" fill="rgb(242,14,37)" fg:x="200601800" fg:w="4012036"/><text x="20.3102%" y="271.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::reverse_maximal_suffix (2,006,018 samples, 0.20%)</title><rect x="20.2608%" y="245" width="0.2006%" height="15" fill="rgb(246,228,12)" fg:x="202607818" fg:w="2006018"/><text x="20.5108%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (65,195,585 samples, 6.52%)</title><rect x="14.0421%" y="469" width="6.5196%" height="15" fill="rgb(213,55,15)" fg:x="140421260" fg:w="65195585"/><text x="14.2921%" y="479.50">&lt;core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (65,195,585 samples, 6.52%)</title><rect x="14.0421%" y="453" width="6.5196%" height="15" fill="rgb(209,9,3)" fg:x="140421260" fg:w="65195585"/><text x="14.2921%" y="463.50">core::ite..</text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (1,003,009 samples, 0.10%)</title><rect x="20.4614%" y="437" width="0.1003%" height="15" fill="rgb(230,59,30)" fg:x="204613836" fg:w="1003009"/><text x="20.7114%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::clone::Clone&gt;::clone (2,006,018 samples, 0.20%)</title><rect x="20.9629%" y="453" width="0.2006%" height="15" fill="rgb(209,121,21)" fg:x="209628881" fg:w="2006018"/><text x="21.2129%" y="463.50"></text></g><g><title>&lt;core::str::iter::RSplit&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (10,030,090 samples, 1.00%)</title><rect x="21.1635%" y="373" width="1.0030%" height="15" fill="rgb(220,109,13)" fg:x="211634899" fg:w="10030090"/><text x="21.4135%" y="383.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_back (10,030,090 samples, 1.00%)</title><rect x="21.1635%" y="357" width="1.0030%" height="15" fill="rgb(232,18,1)" fg:x="211634899" fg:w="10030090"/><text x="21.4135%" y="367.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::ReverseSearcher&gt;::next_match_back (6,018,054 samples, 0.60%)</title><rect x="21.5647%" y="341" width="0.6018%" height="15" fill="rgb(215,41,42)" fg:x="215646935" fg:w="6018054"/><text x="21.8147%" y="351.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next_back (4,012,036 samples, 0.40%)</title><rect x="21.7653%" y="325" width="0.4012%" height="15" fill="rgb(224,123,36)" fg:x="217652953" fg:w="4012036"/><text x="22.0153%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1,003,009 samples, 0.10%)</title><rect x="22.0662%" y="309" width="0.1003%" height="15" fill="rgb(240,125,3)" fg:x="220661980" fg:w="1003009"/><text x="22.3162%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,009,027 samples, 0.30%)</title><rect x="26.0782%" y="197" width="0.3009%" height="15" fill="rgb(205,98,50)" fg:x="260782340" fg:w="3009027"/><text x="26.3282%" y="207.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (3,009,027 samples, 0.30%)</title><rect x="26.0782%" y="181" width="0.3009%" height="15" fill="rgb(205,185,37)" fg:x="260782340" fg:w="3009027"/><text x="26.3282%" y="191.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (3,009,027 samples, 0.30%)</title><rect x="26.0782%" y="165" width="0.3009%" height="15" fill="rgb(238,207,15)" fg:x="260782340" fg:w="3009027"/><text x="26.3282%" y="175.50"></text></g><g><title>&lt;core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy&gt;::matching (3,009,027 samples, 0.30%)</title><rect x="26.3791%" y="197" width="0.3009%" height="15" fill="rgb(213,199,42)" fg:x="263791367" fg:w="3009027"/><text x="26.6291%" y="207.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2,006,018 samples, 0.20%)</title><rect x="26.6800%" y="197" width="0.2006%" height="15" fill="rgb(235,201,11)" fg:x="266800394" fg:w="2006018"/><text x="26.9300%" y="207.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2,006,018 samples, 0.20%)</title><rect x="26.6800%" y="181" width="0.2006%" height="15" fill="rgb(207,46,11)" fg:x="266800394" fg:w="2006018"/><text x="26.9300%" y="191.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1,003,009 samples, 0.10%)</title><rect x="26.7803%" y="165" width="0.1003%" height="15" fill="rgb(241,35,35)" fg:x="267803403" fg:w="1003009"/><text x="27.0303%" y="175.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (37,111,333 samples, 3.71%)</title><rect x="23.2698%" y="229" width="3.7111%" height="15" fill="rgb(243,32,47)" fg:x="232698088" fg:w="37111333"/><text x="23.5198%" y="239.50">&lt;cor..</text></g><g><title>core::str::pattern::TwoWaySearcher::next (33,099,297 samples, 3.31%)</title><rect x="23.6710%" y="213" width="3.3099%" height="15" fill="rgb(247,202,23)" fg:x="236710124" fg:w="33099297"/><text x="23.9210%" y="223.50">cor..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1,003,009 samples, 0.10%)</title><rect x="26.8806%" y="197" width="0.1003%" height="15" fill="rgb(219,102,11)" fg:x="268806412" fg:w="1003009"/><text x="27.1306%" y="207.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1,003,009 samples, 0.10%)</title><rect x="26.8806%" y="181" width="0.1003%" height="15" fill="rgb(243,110,44)" fg:x="268806412" fg:w="1003009"/><text x="27.1306%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (50,150,450 samples, 5.02%)</title><rect x="22.1665%" y="293" width="5.0150%" height="15" fill="rgb(222,74,54)" fg:x="221664989" fg:w="50150450"/><text x="22.4165%" y="303.50">core::..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (50,150,450 samples, 5.02%)</title><rect x="22.1665%" y="277" width="5.0150%" height="15" fill="rgb(216,99,12)" fg:x="221664989" fg:w="50150450"/><text x="22.4165%" y="287.50">core::..</text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (50,150,450 samples, 5.02%)</title><rect x="22.1665%" y="261" width="5.0150%" height="15" fill="rgb(226,22,26)" fg:x="221664989" fg:w="50150450"/><text x="22.4165%" y="271.50">&lt;core:..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (48,144,432 samples, 4.81%)</title><rect x="22.3671%" y="245" width="4.8144%" height="15" fill="rgb(217,163,10)" fg:x="223671007" fg:w="48144432"/><text x="22.6171%" y="255.50">core::..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::get_end (2,006,018 samples, 0.20%)</title><rect x="26.9809%" y="229" width="0.2006%" height="15" fill="rgb(213,25,53)" fg:x="269809421" fg:w="2006018"/><text x="27.2309%" y="239.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (1,003,009 samples, 0.10%)</title><rect x="27.2818%" y="229" width="0.1003%" height="15" fill="rgb(252,105,26)" fg:x="272818448" fg:w="1003009"/><text x="27.5318%" y="239.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,003,009 samples, 0.10%)</title><rect x="27.2818%" y="213" width="0.1003%" height="15" fill="rgb(220,39,43)" fg:x="272818448" fg:w="1003009"/><text x="27.5318%" y="223.50"></text></g><g><title>[libc.so.6] (1,003,009 samples, 0.10%)</title><rect x="27.2818%" y="197" width="0.1003%" height="15" fill="rgb(229,68,48)" fg:x="272818448" fg:w="1003009"/><text x="27.5318%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::_{{closure}} (53,159,477 samples, 5.32%)</title><rect x="22.1665%" y="357" width="5.3159%" height="15" fill="rgb(252,8,32)" fg:x="221664989" fg:w="53159477"/><text x="22.4165%" y="367.50">&lt;core::..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (53,159,477 samples, 5.32%)</title><rect x="22.1665%" y="341" width="5.3159%" height="15" fill="rgb(223,20,43)" fg:x="221664989" fg:w="53159477"/><text x="22.4165%" y="351.50">core::i..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (53,159,477 samples, 5.32%)</title><rect x="22.1665%" y="325" width="5.3159%" height="15" fill="rgb(229,81,49)" fg:x="221664989" fg:w="53159477"/><text x="22.4165%" y="335.50">core::o..</text></g><g><title>aoc_2024_megaproject::problems::day7::Part::evaluate_line::_{{closure}} (53,159,477 samples, 5.32%)</title><rect x="22.1665%" y="309" width="5.3159%" height="15" fill="rgb(236,28,36)" fg:x="221664989" fg:w="53159477"/><text x="22.4165%" y="319.50">aoc_202..</text></g><g><title>core::str::&lt;impl str&gt;::split (3,009,027 samples, 0.30%)</title><rect x="27.1815%" y="293" width="0.3009%" height="15" fill="rgb(249,185,26)" fg:x="271815439" fg:w="3009027"/><text x="27.4315%" y="303.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (3,009,027 samples, 0.30%)</title><rect x="27.1815%" y="277" width="0.3009%" height="15" fill="rgb(249,174,33)" fg:x="271815439" fg:w="3009027"/><text x="27.4315%" y="287.50"></text></g><g><title>core::str::pattern::StrSearcher::new (3,009,027 samples, 0.30%)</title><rect x="27.1815%" y="261" width="0.3009%" height="15" fill="rgb(233,201,37)" fg:x="271815439" fg:w="3009027"/><text x="27.4315%" y="271.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (2,006,018 samples, 0.20%)</title><rect x="27.2818%" y="245" width="0.2006%" height="15" fill="rgb(221,78,26)" fg:x="272818448" fg:w="2006018"/><text x="27.5318%" y="255.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (1,003,009 samples, 0.10%)</title><rect x="27.3821%" y="229" width="0.1003%" height="15" fill="rgb(250,127,30)" fg:x="273821457" fg:w="1003009"/><text x="27.6321%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,003,009 samples, 0.10%)</title><rect x="27.3821%" y="213" width="0.1003%" height="15" fill="rgb(230,49,44)" fg:x="273821457" fg:w="1003009"/><text x="27.6321%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (67,201,603 samples, 6.72%)</title><rect x="21.1635%" y="453" width="6.7202%" height="15" fill="rgb(229,67,23)" fg:x="211634899" fg:w="67201603"/><text x="21.4135%" y="463.50">&lt;core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (67,201,603 samples, 6.72%)</title><rect x="21.1635%" y="437" width="6.7202%" height="15" fill="rgb(249,83,47)" fg:x="211634899" fg:w="67201603"/><text x="21.4135%" y="447.50">core::ite..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (67,201,603 samples, 6.72%)</title><rect x="21.1635%" y="421" width="6.7202%" height="15" fill="rgb(215,43,3)" fg:x="211634899" fg:w="67201603"/><text x="21.4135%" y="431.50">&lt;core::it..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (67,201,603 samples, 6.72%)</title><rect x="21.1635%" y="405" width="6.7202%" height="15" fill="rgb(238,154,13)" fg:x="211634899" fg:w="67201603"/><text x="21.4135%" y="415.50">&lt;core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (67,201,603 samples, 6.72%)</title><rect x="21.1635%" y="389" width="6.7202%" height="15" fill="rgb(219,56,2)" fg:x="211634899" fg:w="67201603"/><text x="21.4135%" y="399.50">core::ite..</text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (57,171,513 samples, 5.72%)</title><rect x="22.1665%" y="373" width="5.7172%" height="15" fill="rgb(233,0,4)" fg:x="221664989" fg:w="57171513"/><text x="22.4165%" y="383.50">core::i..</text></g><g><title>aoc_2024_megaproject::problems::day7::Part::evaluate_line::_{{closure}} (4,012,036 samples, 0.40%)</title><rect x="27.4824%" y="357" width="0.4012%" height="15" fill="rgb(235,30,7)" fg:x="274824466" fg:w="4012036"/><text x="27.7324%" y="367.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (4,012,036 samples, 0.40%)</title><rect x="27.4824%" y="341" width="0.4012%" height="15" fill="rgb(250,79,13)" fg:x="274824466" fg:w="4012036"/><text x="27.7324%" y="351.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for usize&gt;::from_str (4,012,036 samples, 0.40%)</title><rect x="27.4824%" y="325" width="0.4012%" height="15" fill="rgb(211,146,34)" fg:x="274824466" fg:w="4012036"/><text x="27.7324%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::from_str_radix (4,012,036 samples, 0.40%)</title><rect x="27.4824%" y="309" width="0.4012%" height="15" fill="rgb(228,22,38)" fg:x="274824466" fg:w="4012036"/><text x="27.7324%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::from_ascii_radix (4,012,036 samples, 0.40%)</title><rect x="27.4824%" y="293" width="0.4012%" height="15" fill="rgb(235,168,5)" fg:x="274824466" fg:w="4012036"/><text x="27.7324%" y="303.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::to_digit (1,003,009 samples, 0.10%)</title><rect x="27.7834%" y="277" width="0.1003%" height="15" fill="rgb(221,155,16)" fg:x="277833493" fg:w="1003009"/><text x="28.0334%" y="287.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (1,003,009 samples, 0.10%)</title><rect x="27.7834%" y="261" width="0.1003%" height="15" fill="rgb(215,215,53)" fg:x="277833493" fg:w="1003009"/><text x="28.0334%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::clone::Clone&gt;::clone (1,003,009 samples, 0.10%)</title><rect x="28.2849%" y="437" width="0.1003%" height="15" fill="rgb(223,4,10)" fg:x="282848538" fg:w="1003009"/><text x="28.5349%" y="447.50"></text></g><g><title>&lt;core::str::iter::RSplit&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,024,072 samples, 0.80%)</title><rect x="28.4855%" y="357" width="0.8024%" height="15" fill="rgb(234,103,6)" fg:x="284854556" fg:w="8024072"/><text x="28.7355%" y="367.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_back (8,024,072 samples, 0.80%)</title><rect x="28.4855%" y="341" width="0.8024%" height="15" fill="rgb(227,97,0)" fg:x="284854556" fg:w="8024072"/><text x="28.7355%" y="351.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::ReverseSearcher&gt;::next_match_back (7,021,063 samples, 0.70%)</title><rect x="28.5858%" y="325" width="0.7021%" height="15" fill="rgb(234,150,53)" fg:x="285857565" fg:w="7021063"/><text x="28.8358%" y="335.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next_back (7,021,063 samples, 0.70%)</title><rect x="28.5858%" y="309" width="0.7021%" height="15" fill="rgb(228,201,54)" fg:x="285857565" fg:w="7021063"/><text x="28.8358%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (2,006,018 samples, 0.20%)</title><rect x="29.0873%" y="293" width="0.2006%" height="15" fill="rgb(222,22,37)" fg:x="290872610" fg:w="2006018"/><text x="29.3373%" y="303.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (2,006,018 samples, 0.20%)</title><rect x="29.0873%" y="277" width="0.2006%" height="15" fill="rgb(237,53,32)" fg:x="290872610" fg:w="2006018"/><text x="29.3373%" y="287.50"></text></g><g><title>&lt;core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy&gt;::matching (3,009,027 samples, 0.30%)</title><rect x="35.8074%" y="181" width="0.3009%" height="15" fill="rgb(233,25,53)" fg:x="358074213" fg:w="3009027"/><text x="36.0574%" y="191.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1,003,009 samples, 0.10%)</title><rect x="36.1083%" y="181" width="0.1003%" height="15" fill="rgb(210,40,34)" fg:x="361083240" fg:w="1003009"/><text x="36.3583%" y="191.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1,003,009 samples, 0.10%)</title><rect x="36.1083%" y="165" width="0.1003%" height="15" fill="rgb(241,220,44)" fg:x="361083240" fg:w="1003009"/><text x="36.3583%" y="175.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (49,147,441 samples, 4.91%)</title><rect x="31.6951%" y="213" width="4.9147%" height="15" fill="rgb(235,28,35)" fg:x="316950844" fg:w="49147441"/><text x="31.9451%" y="223.50">&lt;core:..</text></g><g><title>core::str::pattern::TwoWaySearcher::next (47,141,423 samples, 4.71%)</title><rect x="31.8957%" y="197" width="4.7141%" height="15" fill="rgb(210,56,17)" fg:x="318956862" fg:w="47141423"/><text x="32.1457%" y="207.50">core:..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get (4,012,036 samples, 0.40%)</title><rect x="36.2086%" y="181" width="0.4012%" height="15" fill="rgb(224,130,29)" fg:x="362086249" fg:w="4012036"/><text x="36.4586%" y="191.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (4,012,036 samples, 0.40%)</title><rect x="36.2086%" y="165" width="0.4012%" height="15" fill="rgb(235,212,8)" fg:x="362086249" fg:w="4012036"/><text x="36.4586%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (70,210,630 samples, 7.02%)</title><rect x="29.6891%" y="277" width="7.0211%" height="15" fill="rgb(223,33,50)" fg:x="296890664" fg:w="70210630"/><text x="29.9391%" y="287.50">core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (70,210,630 samples, 7.02%)</title><rect x="29.6891%" y="261" width="7.0211%" height="15" fill="rgb(219,149,13)" fg:x="296890664" fg:w="70210630"/><text x="29.9391%" y="271.50">core::ite..</text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (68,204,612 samples, 6.82%)</title><rect x="29.8897%" y="245" width="6.8205%" height="15" fill="rgb(250,156,29)" fg:x="298896682" fg:w="68204612"/><text x="30.1397%" y="255.50">&lt;core::st..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (68,204,612 samples, 6.82%)</title><rect x="29.8897%" y="229" width="6.8205%" height="15" fill="rgb(216,193,19)" fg:x="298896682" fg:w="68204612"/><text x="30.1397%" y="239.50">core::str..</text></g><g><title>core::str::&lt;impl str&gt;::get_unchecked (1,003,009 samples, 0.10%)</title><rect x="36.6098%" y="213" width="0.1003%" height="15" fill="rgb(216,135,14)" fg:x="366098285" fg:w="1003009"/><text x="36.8598%" y="223.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get_unchecked (1,003,009 samples, 0.10%)</title><rect x="36.6098%" y="197" width="0.1003%" height="15" fill="rgb(241,47,5)" fg:x="366098285" fg:w="1003009"/><text x="36.8598%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::_{{closure}} (80,240,720 samples, 8.02%)</title><rect x="29.2879%" y="341" width="8.0241%" height="15" fill="rgb(233,42,35)" fg:x="292878628" fg:w="80240720"/><text x="29.5379%" y="351.50">&lt;core::iter..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (78,234,702 samples, 7.82%)</title><rect x="29.4885%" y="325" width="7.8235%" height="15" fill="rgb(231,13,6)" fg:x="294884646" fg:w="78234702"/><text x="29.7385%" y="335.50">core::iter:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (76,228,684 samples, 7.62%)</title><rect x="29.6891%" y="309" width="7.6229%" height="15" fill="rgb(207,181,40)" fg:x="296890664" fg:w="76228684"/><text x="29.9391%" y="319.50">core::ops:..</text></g><g><title>aoc_2024_megaproject::problems::day7::Part::evaluate_line::_{{closure}} (76,228,684 samples, 7.62%)</title><rect x="29.6891%" y="293" width="7.6229%" height="15" fill="rgb(254,173,49)" fg:x="296890664" fg:w="76228684"/><text x="29.9391%" y="303.50">aoc_2024_m..</text></g><g><title>core::str::&lt;impl str&gt;::split (6,018,054 samples, 0.60%)</title><rect x="36.7101%" y="277" width="0.6018%" height="15" fill="rgb(221,1,38)" fg:x="367101294" fg:w="6018054"/><text x="36.9601%" y="287.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (6,018,054 samples, 0.60%)</title><rect x="36.7101%" y="261" width="0.6018%" height="15" fill="rgb(206,124,46)" fg:x="367101294" fg:w="6018054"/><text x="36.9601%" y="271.50"></text></g><g><title>core::str::pattern::StrSearcher::new (6,018,054 samples, 0.60%)</title><rect x="36.7101%" y="245" width="0.6018%" height="15" fill="rgb(249,21,11)" fg:x="367101294" fg:w="6018054"/><text x="36.9601%" y="255.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (5,015,045 samples, 0.50%)</title><rect x="36.8104%" y="229" width="0.5015%" height="15" fill="rgb(222,201,40)" fg:x="368104303" fg:w="5015045"/><text x="37.0604%" y="239.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (4,012,036 samples, 0.40%)</title><rect x="36.9107%" y="213" width="0.4012%" height="15" fill="rgb(235,61,29)" fg:x="369107312" fg:w="4012036"/><text x="37.1607%" y="223.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4,012,036 samples, 0.40%)</title><rect x="36.9107%" y="197" width="0.4012%" height="15" fill="rgb(219,207,3)" fg:x="369107312" fg:w="4012036"/><text x="37.1607%" y="207.50"></text></g><g><title>[libc.so.6] (3,009,027 samples, 0.30%)</title><rect x="37.0110%" y="181" width="0.3009%" height="15" fill="rgb(222,56,46)" fg:x="370110321" fg:w="3009027"/><text x="37.2610%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (91,273,819 samples, 9.13%)</title><rect x="28.3852%" y="405" width="9.1274%" height="15" fill="rgb(239,76,54)" fg:x="283851547" fg:w="91273819"/><text x="28.6352%" y="415.50">&lt;core::iter::..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (91,273,819 samples, 9.13%)</title><rect x="28.3852%" y="389" width="9.1274%" height="15" fill="rgb(231,124,27)" fg:x="283851547" fg:w="91273819"/><text x="28.6352%" y="399.50">&lt;core::iter::..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (90,270,810 samples, 9.03%)</title><rect x="28.4855%" y="373" width="9.0271%" height="15" fill="rgb(249,195,6)" fg:x="284854556" fg:w="90270810"/><text x="28.7355%" y="383.50">core::iter::t..</text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (82,246,738 samples, 8.22%)</title><rect x="29.2879%" y="357" width="8.2247%" height="15" fill="rgb(237,174,47)" fg:x="292878628" fg:w="82246738"/><text x="29.5379%" y="367.50">core::iter:..</text></g><g><title>aoc_2024_megaproject::problems::day7::Part::evaluate_line::_{{closure}} (2,006,018 samples, 0.20%)</title><rect x="37.3119%" y="341" width="0.2006%" height="15" fill="rgb(206,201,31)" fg:x="373119348" fg:w="2006018"/><text x="37.5619%" y="351.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (2,006,018 samples, 0.20%)</title><rect x="37.3119%" y="325" width="0.2006%" height="15" fill="rgb(231,57,52)" fg:x="373119348" fg:w="2006018"/><text x="37.5619%" y="335.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for usize&gt;::from_str (2,006,018 samples, 0.20%)</title><rect x="37.3119%" y="309" width="0.2006%" height="15" fill="rgb(248,177,22)" fg:x="373119348" fg:w="2006018"/><text x="37.5619%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::from_str_radix (2,006,018 samples, 0.20%)</title><rect x="37.3119%" y="293" width="0.2006%" height="15" fill="rgb(215,211,37)" fg:x="373119348" fg:w="2006018"/><text x="37.5619%" y="303.50"></text></g><g><title>core::num::&lt;impl usize&gt;::from_ascii_radix (2,006,018 samples, 0.20%)</title><rect x="37.3119%" y="277" width="0.2006%" height="15" fill="rgb(241,128,51)" fg:x="373119348" fg:w="2006018"/><text x="37.5619%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (93,279,837 samples, 9.33%)</title><rect x="28.3852%" y="437" width="9.3280%" height="15" fill="rgb(227,165,31)" fg:x="283851547" fg:w="93279837"/><text x="28.6352%" y="447.50">&lt;core::iter::..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (93,279,837 samples, 9.33%)</title><rect x="28.3852%" y="421" width="9.3280%" height="15" fill="rgb(228,167,24)" fg:x="283851547" fg:w="93279837"/><text x="28.6352%" y="431.50">core::iter::t..</text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (2,006,018 samples, 0.20%)</title><rect x="37.5125%" y="405" width="0.2006%" height="15" fill="rgb(228,143,12)" fg:x="375125366" fg:w="2006018"/><text x="37.7625%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::clone::Clone&gt;::clone (1,003,009 samples, 0.10%)</title><rect x="38.1143%" y="421" width="0.1003%" height="15" fill="rgb(249,149,8)" fg:x="381143420" fg:w="1003009"/><text x="38.3643%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,003,009 samples, 0.10%)</title><rect x="39.1174%" y="277" width="0.1003%" height="15" fill="rgb(243,35,44)" fg:x="391173510" fg:w="1003009"/><text x="39.3674%" y="287.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1,003,009 samples, 0.10%)</title><rect x="39.1174%" y="261" width="0.1003%" height="15" fill="rgb(246,89,9)" fg:x="391173510" fg:w="1003009"/><text x="39.3674%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (1,003,009 samples, 0.10%)</title><rect x="39.1174%" y="245" width="0.1003%" height="15" fill="rgb(233,213,13)" fg:x="391173510" fg:w="1003009"/><text x="39.3674%" y="255.50"></text></g><g><title>&lt;core::str::iter::RSplit&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,024,072 samples, 0.80%)</title><rect x="38.5155%" y="341" width="0.8024%" height="15" fill="rgb(233,141,41)" fg:x="385155456" fg:w="8024072"/><text x="38.7655%" y="351.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_back (8,024,072 samples, 0.80%)</title><rect x="38.5155%" y="325" width="0.8024%" height="15" fill="rgb(239,167,4)" fg:x="385155456" fg:w="8024072"/><text x="38.7655%" y="335.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::ReverseSearcher&gt;::next_match_back (5,015,045 samples, 0.50%)</title><rect x="38.8164%" y="309" width="0.5015%" height="15" fill="rgb(209,217,16)" fg:x="388164483" fg:w="5015045"/><text x="39.0664%" y="319.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next_back (5,015,045 samples, 0.50%)</title><rect x="38.8164%" y="293" width="0.5015%" height="15" fill="rgb(219,88,35)" fg:x="388164483" fg:w="5015045"/><text x="39.0664%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1,003,009 samples, 0.10%)</title><rect x="39.2177%" y="277" width="0.1003%" height="15" fill="rgb(220,193,23)" fg:x="392176519" fg:w="1003009"/><text x="39.4677%" y="287.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1,003,009 samples, 0.10%)</title><rect x="39.2177%" y="261" width="0.1003%" height="15" fill="rgb(230,90,52)" fg:x="392176519" fg:w="1003009"/><text x="39.4677%" y="271.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2,006,018 samples, 0.20%)</title><rect x="44.5336%" y="165" width="0.2006%" height="15" fill="rgb(252,106,19)" fg:x="445335996" fg:w="2006018"/><text x="44.7836%" y="175.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2,006,018 samples, 0.20%)</title><rect x="44.5336%" y="149" width="0.2006%" height="15" fill="rgb(206,74,20)" fg:x="445335996" fg:w="2006018"/><text x="44.7836%" y="159.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2,006,018 samples, 0.20%)</title><rect x="44.5336%" y="133" width="0.2006%" height="15" fill="rgb(230,138,44)" fg:x="445335996" fg:w="2006018"/><text x="44.7836%" y="143.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (40,120,360 samples, 4.01%)</title><rect x="40.9228%" y="197" width="4.0120%" height="15" fill="rgb(235,182,43)" fg:x="409227672" fg:w="40120360"/><text x="41.1728%" y="207.50">&lt;cor..</text></g><g><title>core::str::pattern::TwoWaySearcher::next (37,111,333 samples, 3.71%)</title><rect x="41.2237%" y="181" width="3.7111%" height="15" fill="rgb(242,16,51)" fg:x="412236699" fg:w="37111333"/><text x="41.4737%" y="191.50">core..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get (2,006,018 samples, 0.20%)</title><rect x="44.7342%" y="165" width="0.2006%" height="15" fill="rgb(248,9,4)" fg:x="447342014" fg:w="2006018"/><text x="44.9842%" y="175.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (2,006,018 samples, 0.20%)</title><rect x="44.7342%" y="149" width="0.2006%" height="15" fill="rgb(210,31,22)" fg:x="447342014" fg:w="2006018"/><text x="44.9842%" y="159.50"></text></g><g><title>core::str::&lt;impl str&gt;::get_unchecked (1,003,009 samples, 0.10%)</title><rect x="44.9348%" y="197" width="0.1003%" height="15" fill="rgb(239,54,39)" fg:x="449348032" fg:w="1003009"/><text x="45.1848%" y="207.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get_unchecked (1,003,009 samples, 0.10%)</title><rect x="44.9348%" y="181" width="0.1003%" height="15" fill="rgb(230,99,41)" fg:x="449348032" fg:w="1003009"/><text x="45.1848%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (56,168,504 samples, 5.62%)</title><rect x="39.5186%" y="261" width="5.6169%" height="15" fill="rgb(253,106,12)" fg:x="395185546" fg:w="56168504"/><text x="39.7686%" y="271.50">core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (56,168,504 samples, 5.62%)</title><rect x="39.5186%" y="245" width="5.6169%" height="15" fill="rgb(213,46,41)" fg:x="395185546" fg:w="56168504"/><text x="39.7686%" y="255.50">core::i..</text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (56,168,504 samples, 5.62%)</title><rect x="39.5186%" y="229" width="5.6169%" height="15" fill="rgb(215,133,35)" fg:x="395185546" fg:w="56168504"/><text x="39.7686%" y="239.50">&lt;core::..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (55,165,495 samples, 5.52%)</title><rect x="39.6189%" y="213" width="5.5165%" height="15" fill="rgb(213,28,5)" fg:x="396188555" fg:w="55165495"/><text x="39.8689%" y="223.50">core::s..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::get_end (1,003,009 samples, 0.10%)</title><rect x="45.0351%" y="197" width="0.1003%" height="15" fill="rgb(215,77,49)" fg:x="450351041" fg:w="1003009"/><text x="45.2851%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (71,213,639 samples, 7.12%)</title><rect x="38.2146%" y="389" width="7.1214%" height="15" fill="rgb(248,100,22)" fg:x="382146429" fg:w="71213639"/><text x="38.4646%" y="399.50">&lt;core::ite..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (71,213,639 samples, 7.12%)</title><rect x="38.2146%" y="373" width="7.1214%" height="15" fill="rgb(208,67,9)" fg:x="382146429" fg:w="71213639"/><text x="38.4646%" y="383.50">&lt;core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (68,204,612 samples, 6.82%)</title><rect x="38.5155%" y="357" width="6.8205%" height="15" fill="rgb(219,133,21)" fg:x="385155456" fg:w="68204612"/><text x="38.7655%" y="367.50">core::ite..</text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (60,180,540 samples, 6.02%)</title><rect x="39.3180%" y="341" width="6.0181%" height="15" fill="rgb(246,46,29)" fg:x="393179528" fg:w="60180540"/><text x="39.5680%" y="351.50">core::it..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::_{{closure}} (60,180,540 samples, 6.02%)</title><rect x="39.3180%" y="325" width="6.0181%" height="15" fill="rgb(246,185,52)" fg:x="393179528" fg:w="60180540"/><text x="39.5680%" y="335.50">&lt;core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (59,177,531 samples, 5.92%)</title><rect x="39.4183%" y="309" width="5.9178%" height="15" fill="rgb(252,136,11)" fg:x="394182537" fg:w="59177531"/><text x="39.6683%" y="319.50">core::it..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (58,174,522 samples, 5.82%)</title><rect x="39.5186%" y="293" width="5.8175%" height="15" fill="rgb(219,138,53)" fg:x="395185546" fg:w="58174522"/><text x="39.7686%" y="303.50">core::o..</text></g><g><title>aoc_2024_megaproject::problems::day7::Part::evaluate_line::_{{closure}} (58,174,522 samples, 5.82%)</title><rect x="39.5186%" y="277" width="5.8175%" height="15" fill="rgb(211,51,23)" fg:x="395185546" fg:w="58174522"/><text x="39.7686%" y="287.50">aoc_202..</text></g><g><title>core::str::&lt;impl str&gt;::split (2,006,018 samples, 0.20%)</title><rect x="45.1354%" y="261" width="0.2006%" height="15" fill="rgb(247,221,28)" fg:x="451354050" fg:w="2006018"/><text x="45.3854%" y="271.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (2,006,018 samples, 0.20%)</title><rect x="45.1354%" y="245" width="0.2006%" height="15" fill="rgb(251,222,45)" fg:x="451354050" fg:w="2006018"/><text x="45.3854%" y="255.50"></text></g><g><title>core::str::pattern::StrSearcher::new (2,006,018 samples, 0.20%)</title><rect x="45.1354%" y="229" width="0.2006%" height="15" fill="rgb(217,162,53)" fg:x="451354050" fg:w="2006018"/><text x="45.3854%" y="239.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (2,006,018 samples, 0.20%)</title><rect x="45.1354%" y="213" width="0.2006%" height="15" fill="rgb(229,93,14)" fg:x="451354050" fg:w="2006018"/><text x="45.3854%" y="223.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (1,003,009 samples, 0.10%)</title><rect x="45.2357%" y="197" width="0.1003%" height="15" fill="rgb(209,67,49)" fg:x="452357059" fg:w="1003009"/><text x="45.4857%" y="207.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,003,009 samples, 0.10%)</title><rect x="45.2357%" y="181" width="0.1003%" height="15" fill="rgb(213,87,29)" fg:x="452357059" fg:w="1003009"/><text x="45.4857%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (72,216,648 samples, 7.22%)</title><rect x="38.2146%" y="421" width="7.2217%" height="15" fill="rgb(205,151,52)" fg:x="382146429" fg:w="72216648"/><text x="38.4646%" y="431.50">&lt;core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (72,216,648 samples, 7.22%)</title><rect x="38.2146%" y="405" width="7.2217%" height="15" fill="rgb(253,215,39)" fg:x="382146429" fg:w="72216648"/><text x="38.4646%" y="415.50">core::iter..</text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (1,003,009 samples, 0.10%)</title><rect x="45.3360%" y="389" width="0.1003%" height="15" fill="rgb(221,220,41)" fg:x="453360068" fg:w="1003009"/><text x="45.5860%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::clone::Clone&gt;::clone (2,006,018 samples, 0.20%)</title><rect x="46.1384%" y="405" width="0.2006%" height="15" fill="rgb(218,133,21)" fg:x="461384140" fg:w="2006018"/><text x="46.3884%" y="415.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1,003,009 samples, 0.10%)</title><rect x="47.1414%" y="261" width="0.1003%" height="15" fill="rgb(221,193,43)" fg:x="471414230" fg:w="1003009"/><text x="47.3914%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1,003,009 samples, 0.10%)</title><rect x="47.1414%" y="245" width="0.1003%" height="15" fill="rgb(240,128,52)" fg:x="471414230" fg:w="1003009"/><text x="47.3914%" y="255.50"></text></g><g><title>&lt;core::str::iter::RSplit&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,024,072 samples, 0.80%)</title><rect x="46.5396%" y="325" width="0.8024%" height="15" fill="rgb(253,114,12)" fg:x="465396176" fg:w="8024072"/><text x="46.7896%" y="335.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_back (8,024,072 samples, 0.80%)</title><rect x="46.5396%" y="309" width="0.8024%" height="15" fill="rgb(215,223,47)" fg:x="465396176" fg:w="8024072"/><text x="46.7896%" y="319.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::ReverseSearcher&gt;::next_match_back (5,015,045 samples, 0.50%)</title><rect x="46.8405%" y="293" width="0.5015%" height="15" fill="rgb(248,225,23)" fg:x="468405203" fg:w="5015045"/><text x="47.0905%" y="303.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next_back (4,012,036 samples, 0.40%)</title><rect x="46.9408%" y="277" width="0.4012%" height="15" fill="rgb(250,108,0)" fg:x="469408212" fg:w="4012036"/><text x="47.1908%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1,003,009 samples, 0.10%)</title><rect x="47.2417%" y="261" width="0.1003%" height="15" fill="rgb(228,208,7)" fg:x="472417239" fg:w="1003009"/><text x="47.4917%" y="271.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1,003,009 samples, 0.10%)</title><rect x="47.2417%" y="245" width="0.1003%" height="15" fill="rgb(244,45,10)" fg:x="472417239" fg:w="1003009"/><text x="47.4917%" y="255.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (52,156,468 samples, 5.22%)</title><rect x="48.9468%" y="181" width="5.2156%" height="15" fill="rgb(207,125,25)" fg:x="489468392" fg:w="52156468"/><text x="49.1968%" y="191.50">&lt;core:..</text></g><g><title>core::str::pattern::TwoWaySearcher::next (48,144,432 samples, 4.81%)</title><rect x="49.3480%" y="165" width="4.8144%" height="15" fill="rgb(210,195,18)" fg:x="493480428" fg:w="48144432"/><text x="49.5980%" y="175.50">core::..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get (3,009,027 samples, 0.30%)</title><rect x="53.8616%" y="149" width="0.3009%" height="15" fill="rgb(249,80,12)" fg:x="538615833" fg:w="3009027"/><text x="54.1116%" y="159.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (3,009,027 samples, 0.30%)</title><rect x="53.8616%" y="133" width="0.3009%" height="15" fill="rgb(221,65,9)" fg:x="538615833" fg:w="3009027"/><text x="54.1116%" y="143.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (68,204,612 samples, 6.82%)</title><rect x="47.4423%" y="245" width="6.8205%" height="15" fill="rgb(235,49,36)" fg:x="474423257" fg:w="68204612"/><text x="47.6923%" y="255.50">core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (68,204,612 samples, 6.82%)</title><rect x="47.4423%" y="229" width="6.8205%" height="15" fill="rgb(225,32,20)" fg:x="474423257" fg:w="68204612"/><text x="47.6923%" y="239.50">core::ite..</text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (68,204,612 samples, 6.82%)</title><rect x="47.4423%" y="213" width="6.8205%" height="15" fill="rgb(215,141,46)" fg:x="474423257" fg:w="68204612"/><text x="47.6923%" y="223.50">&lt;core::st..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (67,201,603 samples, 6.72%)</title><rect x="47.5426%" y="197" width="6.7202%" height="15" fill="rgb(250,160,47)" fg:x="475426266" fg:w="67201603"/><text x="47.7926%" y="207.50">core::str..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::get_end (1,003,009 samples, 0.10%)</title><rect x="54.1625%" y="181" width="0.1003%" height="15" fill="rgb(216,222,40)" fg:x="541624860" fg:w="1003009"/><text x="54.4125%" y="191.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (2,006,018 samples, 0.20%)</title><rect x="54.8646%" y="181" width="0.2006%" height="15" fill="rgb(234,217,39)" fg:x="548645923" fg:w="2006018"/><text x="55.1146%" y="191.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2,006,018 samples, 0.20%)</title><rect x="54.8646%" y="165" width="0.2006%" height="15" fill="rgb(207,178,40)" fg:x="548645923" fg:w="2006018"/><text x="55.1146%" y="175.50"></text></g><g><title>[libc.so.6] (2,006,018 samples, 0.20%)</title><rect x="54.8646%" y="149" width="0.2006%" height="15" fill="rgb(221,136,13)" fg:x="548645923" fg:w="2006018"/><text x="55.1146%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::_{{closure}} (78,234,702 samples, 7.82%)</title><rect x="47.3420%" y="309" width="7.8235%" height="15" fill="rgb(249,199,10)" fg:x="473420248" fg:w="78234702"/><text x="47.5920%" y="319.50">&lt;core::iter..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (78,234,702 samples, 7.82%)</title><rect x="47.3420%" y="293" width="7.8235%" height="15" fill="rgb(249,222,13)" fg:x="473420248" fg:w="78234702"/><text x="47.5920%" y="303.50">core::iter:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (77,231,693 samples, 7.72%)</title><rect x="47.4423%" y="277" width="7.7232%" height="15" fill="rgb(244,185,38)" fg:x="474423257" fg:w="77231693"/><text x="47.6923%" y="287.50">core::ops::..</text></g><g><title>aoc_2024_megaproject::problems::day7::Part::evaluate_line::_{{closure}} (77,231,693 samples, 7.72%)</title><rect x="47.4423%" y="261" width="7.7232%" height="15" fill="rgb(236,202,9)" fg:x="474423257" fg:w="77231693"/><text x="47.6923%" y="271.50">aoc_2024_me..</text></g><g><title>core::str::&lt;impl str&gt;::split (9,027,081 samples, 0.90%)</title><rect x="54.2628%" y="245" width="0.9027%" height="15" fill="rgb(250,229,37)" fg:x="542627869" fg:w="9027081"/><text x="54.5128%" y="255.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (8,024,072 samples, 0.80%)</title><rect x="54.3631%" y="229" width="0.8024%" height="15" fill="rgb(206,174,23)" fg:x="543630878" fg:w="8024072"/><text x="54.6131%" y="239.50"></text></g><g><title>core::str::pattern::StrSearcher::new (5,015,045 samples, 0.50%)</title><rect x="54.6640%" y="213" width="0.5015%" height="15" fill="rgb(211,33,43)" fg:x="546639905" fg:w="5015045"/><text x="54.9140%" y="223.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (3,009,027 samples, 0.30%)</title><rect x="54.8646%" y="197" width="0.3009%" height="15" fill="rgb(245,58,50)" fg:x="548645923" fg:w="3009027"/><text x="55.1146%" y="207.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::reverse_maximal_suffix (1,003,009 samples, 0.10%)</title><rect x="55.0652%" y="181" width="0.1003%" height="15" fill="rgb(244,68,36)" fg:x="550651941" fg:w="1003009"/><text x="55.3152%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (89,267,801 samples, 8.93%)</title><rect x="46.3390%" y="373" width="8.9268%" height="15" fill="rgb(232,229,15)" fg:x="463390158" fg:w="89267801"/><text x="46.5890%" y="383.50">&lt;core::iter::..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (89,267,801 samples, 8.93%)</title><rect x="46.3390%" y="357" width="8.9268%" height="15" fill="rgb(254,30,23)" fg:x="463390158" fg:w="89267801"/><text x="46.5890%" y="367.50">&lt;core::iter::..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (87,261,783 samples, 8.73%)</title><rect x="46.5396%" y="341" width="8.7262%" height="15" fill="rgb(235,160,14)" fg:x="465396176" fg:w="87261783"/><text x="46.7896%" y="351.50">core::iter::..</text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (79,237,711 samples, 7.92%)</title><rect x="47.3420%" y="325" width="7.9238%" height="15" fill="rgb(212,155,44)" fg:x="473420248" fg:w="79237711"/><text x="47.5920%" y="335.50">core::iter:..</text></g><g><title>aoc_2024_megaproject::problems::day7::Part::evaluate_line::_{{closure}} (1,003,009 samples, 0.10%)</title><rect x="55.1655%" y="309" width="0.1003%" height="15" fill="rgb(226,2,50)" fg:x="551654950" fg:w="1003009"/><text x="55.4155%" y="319.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (1,003,009 samples, 0.10%)</title><rect x="55.1655%" y="293" width="0.1003%" height="15" fill="rgb(234,177,6)" fg:x="551654950" fg:w="1003009"/><text x="55.4155%" y="303.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for usize&gt;::from_str (1,003,009 samples, 0.10%)</title><rect x="55.1655%" y="277" width="0.1003%" height="15" fill="rgb(217,24,9)" fg:x="551654950" fg:w="1003009"/><text x="55.4155%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::from_str_radix (1,003,009 samples, 0.10%)</title><rect x="55.1655%" y="261" width="0.1003%" height="15" fill="rgb(220,13,46)" fg:x="551654950" fg:w="1003009"/><text x="55.4155%" y="271.50"></text></g><g><title>core::num::&lt;impl usize&gt;::from_ascii_radix (1,003,009 samples, 0.10%)</title><rect x="55.1655%" y="245" width="0.1003%" height="15" fill="rgb(239,221,27)" fg:x="551654950" fg:w="1003009"/><text x="55.4155%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (90,270,810 samples, 9.03%)</title><rect x="46.3390%" y="405" width="9.0271%" height="15" fill="rgb(222,198,25)" fg:x="463390158" fg:w="90270810"/><text x="46.5890%" y="415.50">&lt;core::iter::..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (90,270,810 samples, 9.03%)</title><rect x="46.3390%" y="389" width="9.0271%" height="15" fill="rgb(211,99,13)" fg:x="463390158" fg:w="90270810"/><text x="46.5890%" y="399.50">core::iter::t..</text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (1,003,009 samples, 0.10%)</title><rect x="55.2658%" y="373" width="0.1003%" height="15" fill="rgb(232,111,31)" fg:x="552657959" fg:w="1003009"/><text x="55.5158%" y="383.50"></text></g><g><title>&lt;core::str::iter::RSplit&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (13,039,117 samples, 1.30%)</title><rect x="55.9679%" y="309" width="1.3039%" height="15" fill="rgb(245,82,37)" fg:x="559679022" fg:w="13039117"/><text x="56.2179%" y="319.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_back (13,039,117 samples, 1.30%)</title><rect x="55.9679%" y="293" width="1.3039%" height="15" fill="rgb(227,149,46)" fg:x="559679022" fg:w="13039117"/><text x="56.2179%" y="303.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::ReverseSearcher&gt;::next_match_back (8,024,072 samples, 0.80%)</title><rect x="56.4694%" y="277" width="0.8024%" height="15" fill="rgb(218,36,50)" fg:x="564694067" fg:w="8024072"/><text x="56.7194%" y="287.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next_back (5,015,045 samples, 0.50%)</title><rect x="56.7703%" y="261" width="0.5015%" height="15" fill="rgb(226,80,48)" fg:x="567703094" fg:w="5015045"/><text x="57.0203%" y="271.50"></text></g><g><title>&lt;core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy&gt;::matching (1,003,009 samples, 0.10%)</title><rect x="57.1715%" y="245" width="0.1003%" height="15" fill="rgb(238,224,15)" fg:x="571715130" fg:w="1003009"/><text x="57.4215%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,003,009 samples, 0.10%)</title><rect x="62.4875%" y="133" width="0.1003%" height="15" fill="rgb(241,136,10)" fg:x="624874607" fg:w="1003009"/><text x="62.7375%" y="143.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1,003,009 samples, 0.10%)</title><rect x="62.4875%" y="117" width="0.1003%" height="15" fill="rgb(208,32,45)" fg:x="624874607" fg:w="1003009"/><text x="62.7375%" y="127.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (1,003,009 samples, 0.10%)</title><rect x="62.4875%" y="101" width="0.1003%" height="15" fill="rgb(207,135,9)" fg:x="624874607" fg:w="1003009"/><text x="62.7375%" y="111.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (54,162,486 samples, 5.42%)</title><rect x="57.2718%" y="229" width="5.4162%" height="15" fill="rgb(206,86,44)" fg:x="572718139" fg:w="54162486"/><text x="57.5218%" y="239.50">core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (54,162,486 samples, 5.42%)</title><rect x="57.2718%" y="213" width="5.4162%" height="15" fill="rgb(245,177,15)" fg:x="572718139" fg:w="54162486"/><text x="57.5218%" y="223.50">core::i..</text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (54,162,486 samples, 5.42%)</title><rect x="57.2718%" y="197" width="5.4162%" height="15" fill="rgb(206,64,50)" fg:x="572718139" fg:w="54162486"/><text x="57.5218%" y="207.50">&lt;core::..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (53,159,477 samples, 5.32%)</title><rect x="57.3721%" y="181" width="5.3159%" height="15" fill="rgb(234,36,40)" fg:x="573721148" fg:w="53159477"/><text x="57.6221%" y="191.50">core::s..</text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (39,117,351 samples, 3.91%)</title><rect x="58.7763%" y="165" width="3.9117%" height="15" fill="rgb(213,64,8)" fg:x="587763274" fg:w="39117351"/><text x="59.0263%" y="175.50">&lt;cor..</text></g><g><title>core::str::pattern::TwoWaySearcher::next (35,105,315 samples, 3.51%)</title><rect x="59.1775%" y="149" width="3.5105%" height="15" fill="rgb(210,75,36)" fg:x="591775310" fg:w="35105315"/><text x="59.4275%" y="159.50">cor..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1,003,009 samples, 0.10%)</title><rect x="62.5878%" y="133" width="0.1003%" height="15" fill="rgb(229,88,21)" fg:x="625877616" fg:w="1003009"/><text x="62.8378%" y="143.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1,003,009 samples, 0.10%)</title><rect x="62.5878%" y="117" width="0.1003%" height="15" fill="rgb(252,204,47)" fg:x="625877616" fg:w="1003009"/><text x="62.8378%" y="127.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (1,003,009 samples, 0.10%)</title><rect x="62.8887%" y="165" width="0.1003%" height="15" fill="rgb(208,77,27)" fg:x="628886643" fg:w="1003009"/><text x="63.1387%" y="175.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,003,009 samples, 0.10%)</title><rect x="62.8887%" y="149" width="0.1003%" height="15" fill="rgb(221,76,26)" fg:x="628886643" fg:w="1003009"/><text x="63.1387%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::_{{closure}} (58,174,522 samples, 5.82%)</title><rect x="57.2718%" y="293" width="5.8175%" height="15" fill="rgb(225,139,18)" fg:x="572718139" fg:w="58174522"/><text x="57.5218%" y="303.50">&lt;core::..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (58,174,522 samples, 5.82%)</title><rect x="57.2718%" y="277" width="5.8175%" height="15" fill="rgb(230,137,11)" fg:x="572718139" fg:w="58174522"/><text x="57.5218%" y="287.50">core::i..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (58,174,522 samples, 5.82%)</title><rect x="57.2718%" y="261" width="5.8175%" height="15" fill="rgb(212,28,1)" fg:x="572718139" fg:w="58174522"/><text x="57.5218%" y="271.50">core::o..</text></g><g><title>aoc_2024_megaproject::problems::day7::Part::evaluate_line::_{{closure}} (58,174,522 samples, 5.82%)</title><rect x="57.2718%" y="245" width="5.8175%" height="15" fill="rgb(248,164,17)" fg:x="572718139" fg:w="58174522"/><text x="57.5218%" y="255.50">aoc_202..</text></g><g><title>core::str::&lt;impl str&gt;::split (4,012,036 samples, 0.40%)</title><rect x="62.6881%" y="229" width="0.4012%" height="15" fill="rgb(222,171,42)" fg:x="626880625" fg:w="4012036"/><text x="62.9381%" y="239.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (4,012,036 samples, 0.40%)</title><rect x="62.6881%" y="213" width="0.4012%" height="15" fill="rgb(243,84,45)" fg:x="626880625" fg:w="4012036"/><text x="62.9381%" y="223.50"></text></g><g><title>core::str::pattern::StrSearcher::new (4,012,036 samples, 0.40%)</title><rect x="62.6881%" y="197" width="0.4012%" height="15" fill="rgb(252,49,23)" fg:x="626880625" fg:w="4012036"/><text x="62.9381%" y="207.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (2,006,018 samples, 0.20%)</title><rect x="62.8887%" y="181" width="0.2006%" height="15" fill="rgb(215,19,7)" fg:x="628886643" fg:w="2006018"/><text x="63.1387%" y="191.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::reverse_maximal_suffix (1,003,009 samples, 0.10%)</title><rect x="62.9890%" y="165" width="0.1003%" height="15" fill="rgb(238,81,41)" fg:x="629889652" fg:w="1003009"/><text x="63.2390%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (75,225,675 samples, 7.52%)</title><rect x="55.7673%" y="389" width="7.5226%" height="15" fill="rgb(210,199,37)" fg:x="557673004" fg:w="75225675"/><text x="56.0173%" y="399.50">&lt;core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (75,225,675 samples, 7.52%)</title><rect x="55.7673%" y="373" width="7.5226%" height="15" fill="rgb(244,192,49)" fg:x="557673004" fg:w="75225675"/><text x="56.0173%" y="383.50">core::iter..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (75,225,675 samples, 7.52%)</title><rect x="55.7673%" y="357" width="7.5226%" height="15" fill="rgb(226,211,11)" fg:x="557673004" fg:w="75225675"/><text x="56.0173%" y="367.50">&lt;core::ite..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (74,222,666 samples, 7.42%)</title><rect x="55.8676%" y="341" width="7.4223%" height="15" fill="rgb(236,162,54)" fg:x="558676013" fg:w="74222666"/><text x="56.1176%" y="351.50">&lt;core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (73,219,657 samples, 7.32%)</title><rect x="55.9679%" y="325" width="7.3220%" height="15" fill="rgb(220,229,9)" fg:x="559679022" fg:w="73219657"/><text x="56.2179%" y="335.50">core::iter..</text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (60,180,540 samples, 6.02%)</title><rect x="57.2718%" y="309" width="6.0181%" height="15" fill="rgb(250,87,22)" fg:x="572718139" fg:w="60180540"/><text x="57.5218%" y="319.50">core::it..</text></g><g><title>aoc_2024_megaproject::problems::day7::Part::evaluate_line::_{{closure}} (2,006,018 samples, 0.20%)</title><rect x="63.0893%" y="293" width="0.2006%" height="15" fill="rgb(239,43,17)" fg:x="630892661" fg:w="2006018"/><text x="63.3393%" y="303.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (2,006,018 samples, 0.20%)</title><rect x="63.0893%" y="277" width="0.2006%" height="15" fill="rgb(231,177,25)" fg:x="630892661" fg:w="2006018"/><text x="63.3393%" y="287.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for usize&gt;::from_str (2,006,018 samples, 0.20%)</title><rect x="63.0893%" y="261" width="0.2006%" height="15" fill="rgb(219,179,1)" fg:x="630892661" fg:w="2006018"/><text x="63.3393%" y="271.50"></text></g><g><title>core::num::&lt;impl usize&gt;::from_str_radix (2,006,018 samples, 0.20%)</title><rect x="63.0893%" y="245" width="0.2006%" height="15" fill="rgb(238,219,53)" fg:x="630892661" fg:w="2006018"/><text x="63.3393%" y="255.50"></text></g><g><title>core::num::&lt;impl usize&gt;::from_ascii_radix (2,006,018 samples, 0.20%)</title><rect x="63.0893%" y="229" width="0.2006%" height="15" fill="rgb(232,167,36)" fg:x="630892661" fg:w="2006018"/><text x="63.3393%" y="239.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::to_digit (1,003,009 samples, 0.10%)</title><rect x="63.1896%" y="213" width="0.1003%" height="15" fill="rgb(244,19,51)" fg:x="631895670" fg:w="1003009"/><text x="63.4396%" y="223.50"></text></g><g><title>&lt;core::str::iter::RSplit&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (15,045,135 samples, 1.50%)</title><rect x="63.8917%" y="293" width="1.5045%" height="15" fill="rgb(224,6,22)" fg:x="638916733" fg:w="15045135"/><text x="64.1417%" y="303.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_back (15,045,135 samples, 1.50%)</title><rect x="63.8917%" y="277" width="1.5045%" height="15" fill="rgb(224,145,5)" fg:x="638916733" fg:w="15045135"/><text x="64.1417%" y="287.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::ReverseSearcher&gt;::next_match_back (7,021,063 samples, 0.70%)</title><rect x="64.6941%" y="261" width="0.7021%" height="15" fill="rgb(234,130,49)" fg:x="646940805" fg:w="7021063"/><text x="64.9441%" y="271.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next_back (7,021,063 samples, 0.70%)</title><rect x="64.6941%" y="245" width="0.7021%" height="15" fill="rgb(254,6,2)" fg:x="646940805" fg:w="7021063"/><text x="64.9441%" y="255.50"></text></g><g><title>&lt;core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy&gt;::matching (1,003,009 samples, 0.10%)</title><rect x="65.2959%" y="229" width="0.1003%" height="15" fill="rgb(208,96,46)" fg:x="652958859" fg:w="1003009"/><text x="65.5459%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,003,009 samples, 0.10%)</title><rect x="71.8154%" y="117" width="0.1003%" height="15" fill="rgb(239,3,39)" fg:x="718154444" fg:w="1003009"/><text x="72.0654%" y="127.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1,003,009 samples, 0.10%)</title><rect x="71.8154%" y="101" width="0.1003%" height="15" fill="rgb(233,210,1)" fg:x="718154444" fg:w="1003009"/><text x="72.0654%" y="111.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (1,003,009 samples, 0.10%)</title><rect x="71.8154%" y="85" width="0.1003%" height="15" fill="rgb(244,137,37)" fg:x="718154444" fg:w="1003009"/><text x="72.0654%" y="95.50"></text></g><g><title>&lt;core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy&gt;::matching (1,003,009 samples, 0.10%)</title><rect x="71.9157%" y="117" width="0.1003%" height="15" fill="rgb(240,136,2)" fg:x="719157453" fg:w="1003009"/><text x="72.1657%" y="127.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1,003,009 samples, 0.10%)</title><rect x="72.0160%" y="117" width="0.1003%" height="15" fill="rgb(239,18,37)" fg:x="720160462" fg:w="1003009"/><text x="72.2660%" y="127.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1,003,009 samples, 0.10%)</title><rect x="72.0160%" y="101" width="0.1003%" height="15" fill="rgb(218,185,22)" fg:x="720160462" fg:w="1003009"/><text x="72.2660%" y="111.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1,003,009 samples, 0.10%)</title><rect x="72.0160%" y="85" width="0.1003%" height="15" fill="rgb(225,218,4)" fg:x="720160462" fg:w="1003009"/><text x="72.2660%" y="95.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (48,144,432 samples, 4.81%)</title><rect x="67.5025%" y="149" width="4.8144%" height="15" fill="rgb(230,182,32)" fg:x="675025057" fg:w="48144432"/><text x="67.7525%" y="159.50">&lt;core:..</text></g><g><title>core::str::pattern::TwoWaySearcher::next (42,126,378 samples, 4.21%)</title><rect x="68.1043%" y="133" width="4.2126%" height="15" fill="rgb(242,56,43)" fg:x="681043111" fg:w="42126378"/><text x="68.3543%" y="143.50">core:..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get (2,006,018 samples, 0.20%)</title><rect x="72.1163%" y="117" width="0.2006%" height="15" fill="rgb(233,99,24)" fg:x="721163471" fg:w="2006018"/><text x="72.3663%" y="127.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (2,006,018 samples, 0.20%)</title><rect x="72.1163%" y="101" width="0.2006%" height="15" fill="rgb(234,209,42)" fg:x="721163471" fg:w="2006018"/><text x="72.3663%" y="111.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (66,198,594 samples, 6.62%)</title><rect x="65.7974%" y="213" width="6.6199%" height="15" fill="rgb(227,7,12)" fg:x="657973904" fg:w="66198594"/><text x="66.0474%" y="223.50">core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (66,198,594 samples, 6.62%)</title><rect x="65.7974%" y="197" width="6.6199%" height="15" fill="rgb(245,203,43)" fg:x="657973904" fg:w="66198594"/><text x="66.0474%" y="207.50">core::ite..</text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (66,198,594 samples, 6.62%)</title><rect x="65.7974%" y="181" width="6.6199%" height="15" fill="rgb(238,205,33)" fg:x="657973904" fg:w="66198594"/><text x="66.0474%" y="191.50">&lt;core::st..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (65,195,585 samples, 6.52%)</title><rect x="65.8977%" y="165" width="6.5196%" height="15" fill="rgb(231,56,7)" fg:x="658976913" fg:w="65195585"/><text x="66.1477%" y="175.50">core::str..</text></g><g><title>core::str::&lt;impl str&gt;::get_unchecked (1,003,009 samples, 0.10%)</title><rect x="72.3170%" y="149" width="0.1003%" height="15" fill="rgb(244,186,29)" fg:x="723169489" fg:w="1003009"/><text x="72.5670%" y="159.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get_unchecked (1,003,009 samples, 0.10%)</title><rect x="72.3170%" y="133" width="0.1003%" height="15" fill="rgb(234,111,31)" fg:x="723169489" fg:w="1003009"/><text x="72.5670%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (91,273,819 samples, 9.13%)</title><rect x="63.5908%" y="341" width="9.1274%" height="15" fill="rgb(241,149,10)" fg:x="635907706" fg:w="91273819"/><text x="63.8408%" y="351.50">&lt;core::iter::..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (91,273,819 samples, 9.13%)</title><rect x="63.5908%" y="325" width="9.1274%" height="15" fill="rgb(249,206,44)" fg:x="635907706" fg:w="91273819"/><text x="63.8408%" y="335.50">&lt;core::iter::..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (88,264,792 samples, 8.83%)</title><rect x="63.8917%" y="309" width="8.8265%" height="15" fill="rgb(251,153,30)" fg:x="638916733" fg:w="88264792"/><text x="64.1417%" y="319.50">core::iter::..</text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (73,219,657 samples, 7.32%)</title><rect x="65.3962%" y="293" width="7.3220%" height="15" fill="rgb(239,152,38)" fg:x="653961868" fg:w="73219657"/><text x="65.6462%" y="303.50">core::iter..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::_{{closure}} (73,219,657 samples, 7.32%)</title><rect x="65.3962%" y="277" width="7.3220%" height="15" fill="rgb(249,139,47)" fg:x="653961868" fg:w="73219657"/><text x="65.6462%" y="287.50">&lt;core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (71,213,639 samples, 7.12%)</title><rect x="65.5968%" y="261" width="7.1214%" height="15" fill="rgb(244,64,35)" fg:x="655967886" fg:w="71213639"/><text x="65.8468%" y="271.50">core::iter..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (69,207,621 samples, 6.92%)</title><rect x="65.7974%" y="245" width="6.9208%" height="15" fill="rgb(216,46,15)" fg:x="657973904" fg:w="69207621"/><text x="66.0474%" y="255.50">core::ops..</text></g><g><title>aoc_2024_megaproject::problems::day7::Part::evaluate_line::_{{closure}} (69,207,621 samples, 6.92%)</title><rect x="65.7974%" y="229" width="6.9208%" height="15" fill="rgb(250,74,19)" fg:x="657973904" fg:w="69207621"/><text x="66.0474%" y="239.50">aoc_2024_..</text></g><g><title>core::str::&lt;impl str&gt;::split (3,009,027 samples, 0.30%)</title><rect x="72.4173%" y="213" width="0.3009%" height="15" fill="rgb(249,42,33)" fg:x="724172498" fg:w="3009027"/><text x="72.6673%" y="223.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (3,009,027 samples, 0.30%)</title><rect x="72.4173%" y="197" width="0.3009%" height="15" fill="rgb(242,149,17)" fg:x="724172498" fg:w="3009027"/><text x="72.6673%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (3,009,027 samples, 0.30%)</title><rect x="72.4173%" y="181" width="0.3009%" height="15" fill="rgb(244,29,21)" fg:x="724172498" fg:w="3009027"/><text x="72.6673%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (92,276,828 samples, 9.23%)</title><rect x="63.5908%" y="373" width="9.2277%" height="15" fill="rgb(220,130,37)" fg:x="635907706" fg:w="92276828"/><text x="63.8408%" y="383.50">&lt;core::iter::..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (92,276,828 samples, 9.23%)</title><rect x="63.5908%" y="357" width="9.2277%" height="15" fill="rgb(211,67,2)" fg:x="635907706" fg:w="92276828"/><text x="63.8408%" y="367.50">core::iter::t..</text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (1,003,009 samples, 0.10%)</title><rect x="72.7182%" y="341" width="0.1003%" height="15" fill="rgb(235,68,52)" fg:x="727181525" fg:w="1003009"/><text x="72.9682%" y="351.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::ReverseSearcher&gt;::next_match_back (5,015,045 samples, 0.50%)</title><rect x="73.5206%" y="245" width="0.5015%" height="15" fill="rgb(246,142,3)" fg:x="735205597" fg:w="5015045"/><text x="73.7706%" y="255.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next_back (4,012,036 samples, 0.40%)</title><rect x="73.6209%" y="229" width="0.4012%" height="15" fill="rgb(241,25,7)" fg:x="736208606" fg:w="4012036"/><text x="73.8709%" y="239.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1,003,009 samples, 0.10%)</title><rect x="73.9218%" y="213" width="0.1003%" height="15" fill="rgb(242,119,39)" fg:x="739217633" fg:w="1003009"/><text x="74.1718%" y="223.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1,003,009 samples, 0.10%)</title><rect x="73.9218%" y="197" width="0.1003%" height="15" fill="rgb(241,98,45)" fg:x="739217633" fg:w="1003009"/><text x="74.1718%" y="207.50"></text></g><g><title>&lt;core::str::iter::RSplit&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,024,072 samples, 0.80%)</title><rect x="73.3200%" y="277" width="0.8024%" height="15" fill="rgb(254,28,30)" fg:x="733199579" fg:w="8024072"/><text x="73.5700%" y="287.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_back (8,024,072 samples, 0.80%)</title><rect x="73.3200%" y="261" width="0.8024%" height="15" fill="rgb(241,142,54)" fg:x="733199579" fg:w="8024072"/><text x="73.5700%" y="271.50"></text></g><g><title>core::str::&lt;impl str&gt;::get_unchecked (1,003,009 samples, 0.10%)</title><rect x="74.0221%" y="245" width="0.1003%" height="15" fill="rgb(222,85,15)" fg:x="740220642" fg:w="1003009"/><text x="74.2721%" y="255.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get_unchecked (1,003,009 samples, 0.10%)</title><rect x="74.0221%" y="229" width="0.1003%" height="15" fill="rgb(210,85,47)" fg:x="740220642" fg:w="1003009"/><text x="74.2721%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,009,027 samples, 0.30%)</title><rect x="80.7422%" y="101" width="0.3009%" height="15" fill="rgb(224,206,25)" fg:x="807422245" fg:w="3009027"/><text x="80.9922%" y="111.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (3,009,027 samples, 0.30%)</title><rect x="80.7422%" y="85" width="0.3009%" height="15" fill="rgb(243,201,19)" fg:x="807422245" fg:w="3009027"/><text x="80.9922%" y="95.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (3,009,027 samples, 0.30%)</title><rect x="80.7422%" y="69" width="0.3009%" height="15" fill="rgb(236,59,4)" fg:x="807422245" fg:w="3009027"/><text x="80.9922%" y="79.50"></text></g><g><title>&lt;core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy&gt;::matching (2,006,018 samples, 0.20%)</title><rect x="81.0431%" y="101" width="0.2006%" height="15" fill="rgb(254,179,45)" fg:x="810431272" fg:w="2006018"/><text x="81.2931%" y="111.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (73,219,657 samples, 7.32%)</title><rect x="74.3230%" y="197" width="7.3220%" height="15" fill="rgb(226,14,10)" fg:x="743229669" fg:w="73219657"/><text x="74.5730%" y="207.50">core::iter..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (73,219,657 samples, 7.32%)</title><rect x="74.3230%" y="181" width="7.3220%" height="15" fill="rgb(244,27,41)" fg:x="743229669" fg:w="73219657"/><text x="74.5730%" y="191.50">core::iter..</text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (70,210,630 samples, 7.02%)</title><rect x="74.6239%" y="165" width="7.0211%" height="15" fill="rgb(235,35,32)" fg:x="746238696" fg:w="70210630"/><text x="74.8739%" y="175.50">&lt;core::st..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (70,210,630 samples, 7.02%)</title><rect x="74.6239%" y="149" width="7.0211%" height="15" fill="rgb(218,68,31)" fg:x="746238696" fg:w="70210630"/><text x="74.8739%" y="159.50">core::str..</text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (60,180,540 samples, 6.02%)</title><rect x="75.6269%" y="133" width="6.0181%" height="15" fill="rgb(207,120,37)" fg:x="756268786" fg:w="60180540"/><text x="75.8769%" y="143.50">&lt;core::s..</text></g><g><title>core::str::pattern::TwoWaySearcher::next (55,165,495 samples, 5.52%)</title><rect x="76.1284%" y="117" width="5.5165%" height="15" fill="rgb(227,98,0)" fg:x="761283831" fg:w="55165495"/><text x="76.3784%" y="127.50">core::s..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get (4,012,036 samples, 0.40%)</title><rect x="81.2437%" y="101" width="0.4012%" height="15" fill="rgb(207,7,3)" fg:x="812437290" fg:w="4012036"/><text x="81.4937%" y="111.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (4,012,036 samples, 0.40%)</title><rect x="81.2437%" y="85" width="0.4012%" height="15" fill="rgb(206,98,19)" fg:x="812437290" fg:w="4012036"/><text x="81.4937%" y="95.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::_{{closure}} (80,240,720 samples, 8.02%)</title><rect x="74.1224%" y="261" width="8.0241%" height="15" fill="rgb(217,5,26)" fg:x="741223651" fg:w="80240720"/><text x="74.3724%" y="271.50">&lt;core::iter..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (78,234,702 samples, 7.82%)</title><rect x="74.3230%" y="245" width="7.8235%" height="15" fill="rgb(235,190,38)" fg:x="743229669" fg:w="78234702"/><text x="74.5730%" y="255.50">core::iter:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (78,234,702 samples, 7.82%)</title><rect x="74.3230%" y="229" width="7.8235%" height="15" fill="rgb(247,86,24)" fg:x="743229669" fg:w="78234702"/><text x="74.5730%" y="239.50">core::ops::..</text></g><g><title>aoc_2024_megaproject::problems::day7::Part::evaluate_line::_{{closure}} (78,234,702 samples, 7.82%)</title><rect x="74.3230%" y="213" width="7.8235%" height="15" fill="rgb(205,101,16)" fg:x="743229669" fg:w="78234702"/><text x="74.5730%" y="223.50">aoc_2024_me..</text></g><g><title>core::str::&lt;impl str&gt;::split (5,015,045 samples, 0.50%)</title><rect x="81.6449%" y="197" width="0.5015%" height="15" fill="rgb(246,168,33)" fg:x="816449326" fg:w="5015045"/><text x="81.8949%" y="207.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (3,009,027 samples, 0.30%)</title><rect x="81.8455%" y="181" width="0.3009%" height="15" fill="rgb(231,114,1)" fg:x="818455344" fg:w="3009027"/><text x="82.0955%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (3,009,027 samples, 0.30%)</title><rect x="81.8455%" y="165" width="0.3009%" height="15" fill="rgb(207,184,53)" fg:x="818455344" fg:w="3009027"/><text x="82.0955%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (89,267,801 samples, 8.93%)</title><rect x="73.3200%" y="325" width="8.9268%" height="15" fill="rgb(224,95,51)" fg:x="733199579" fg:w="89267801"/><text x="73.5700%" y="335.50">&lt;core::iter::..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (89,267,801 samples, 8.93%)</title><rect x="73.3200%" y="309" width="8.9268%" height="15" fill="rgb(212,188,45)" fg:x="733199579" fg:w="89267801"/><text x="73.5700%" y="319.50">&lt;core::iter::..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (89,267,801 samples, 8.93%)</title><rect x="73.3200%" y="293" width="8.9268%" height="15" fill="rgb(223,154,38)" fg:x="733199579" fg:w="89267801"/><text x="73.5700%" y="303.50">core::iter::t..</text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (81,243,729 samples, 8.12%)</title><rect x="74.1224%" y="277" width="8.1244%" height="15" fill="rgb(251,22,52)" fg:x="741223651" fg:w="81243729"/><text x="74.3724%" y="287.50">core::iter:..</text></g><g><title>aoc_2024_megaproject::problems::day7::Part::evaluate_line::_{{closure}} (1,003,009 samples, 0.10%)</title><rect x="82.1464%" y="261" width="0.1003%" height="15" fill="rgb(229,209,22)" fg:x="821464371" fg:w="1003009"/><text x="82.3964%" y="271.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (1,003,009 samples, 0.10%)</title><rect x="82.1464%" y="245" width="0.1003%" height="15" fill="rgb(234,138,34)" fg:x="821464371" fg:w="1003009"/><text x="82.3964%" y="255.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for usize&gt;::from_str (1,003,009 samples, 0.10%)</title><rect x="82.1464%" y="229" width="0.1003%" height="15" fill="rgb(212,95,11)" fg:x="821464371" fg:w="1003009"/><text x="82.3964%" y="239.50"></text></g><g><title>core::num::&lt;impl usize&gt;::from_str_radix (1,003,009 samples, 0.10%)</title><rect x="82.1464%" y="213" width="0.1003%" height="15" fill="rgb(240,179,47)" fg:x="821464371" fg:w="1003009"/><text x="82.3964%" y="223.50"></text></g><g><title>core::num::&lt;impl usize&gt;::from_ascii_radix (1,003,009 samples, 0.10%)</title><rect x="82.1464%" y="197" width="0.1003%" height="15" fill="rgb(240,163,11)" fg:x="821464371" fg:w="1003009"/><text x="82.3964%" y="207.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::to_digit (1,003,009 samples, 0.10%)</title><rect x="82.1464%" y="181" width="0.1003%" height="15" fill="rgb(236,37,12)" fg:x="821464371" fg:w="1003009"/><text x="82.3964%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (90,270,810 samples, 9.03%)</title><rect x="73.3200%" y="357" width="9.0271%" height="15" fill="rgb(232,164,16)" fg:x="733199579" fg:w="90270810"/><text x="73.5700%" y="367.50">&lt;core::iter::..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (90,270,810 samples, 9.03%)</title><rect x="73.3200%" y="341" width="9.0271%" height="15" fill="rgb(244,205,15)" fg:x="733199579" fg:w="90270810"/><text x="73.5700%" y="351.50">core::iter::t..</text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (1,003,009 samples, 0.10%)</title><rect x="82.2467%" y="325" width="0.1003%" height="15" fill="rgb(223,117,47)" fg:x="822467380" fg:w="1003009"/><text x="82.4967%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,003,009 samples, 0.10%)</title><rect x="82.7482%" y="197" width="0.1003%" height="15" fill="rgb(244,107,35)" fg:x="827482425" fg:w="1003009"/><text x="82.9982%" y="207.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1,003,009 samples, 0.10%)</title><rect x="82.7482%" y="181" width="0.1003%" height="15" fill="rgb(205,140,8)" fg:x="827482425" fg:w="1003009"/><text x="82.9982%" y="191.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (1,003,009 samples, 0.10%)</title><rect x="82.7482%" y="165" width="0.1003%" height="15" fill="rgb(228,84,46)" fg:x="827482425" fg:w="1003009"/><text x="82.9982%" y="175.50"></text></g><g><title>&lt;core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy&gt;::matching (1,003,009 samples, 0.10%)</title><rect x="82.8485%" y="197" width="0.1003%" height="15" fill="rgb(254,188,9)" fg:x="828485434" fg:w="1003009"/><text x="83.0985%" y="207.50"></text></g><g><title>&lt;core::str::iter::RSplit&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5,015,045 samples, 0.50%)</title><rect x="82.5476%" y="261" width="0.5015%" height="15" fill="rgb(206,112,54)" fg:x="825476407" fg:w="5015045"/><text x="82.7976%" y="271.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_back (5,015,045 samples, 0.50%)</title><rect x="82.5476%" y="245" width="0.5015%" height="15" fill="rgb(216,84,49)" fg:x="825476407" fg:w="5015045"/><text x="82.7976%" y="255.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::ReverseSearcher&gt;::next_match_back (4,012,036 samples, 0.40%)</title><rect x="82.6479%" y="229" width="0.4012%" height="15" fill="rgb(214,194,35)" fg:x="826479416" fg:w="4012036"/><text x="82.8979%" y="239.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next_back (4,012,036 samples, 0.40%)</title><rect x="82.6479%" y="213" width="0.4012%" height="15" fill="rgb(249,28,3)" fg:x="826479416" fg:w="4012036"/><text x="82.8979%" y="223.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1,003,009 samples, 0.10%)</title><rect x="82.9488%" y="197" width="0.1003%" height="15" fill="rgb(222,56,52)" fg:x="829488443" fg:w="1003009"/><text x="83.1988%" y="207.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1,003,009 samples, 0.10%)</title><rect x="82.9488%" y="181" width="0.1003%" height="15" fill="rgb(245,217,50)" fg:x="829488443" fg:w="1003009"/><text x="83.1988%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,006,018 samples, 0.20%)</title><rect x="88.8666%" y="85" width="0.2006%" height="15" fill="rgb(213,201,24)" fg:x="888665974" fg:w="2006018"/><text x="89.1166%" y="95.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (2,006,018 samples, 0.20%)</title><rect x="88.8666%" y="69" width="0.2006%" height="15" fill="rgb(248,116,28)" fg:x="888665974" fg:w="2006018"/><text x="89.1166%" y="79.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (2,006,018 samples, 0.20%)</title><rect x="88.8666%" y="53" width="0.2006%" height="15" fill="rgb(219,72,43)" fg:x="888665974" fg:w="2006018"/><text x="89.1166%" y="63.50"></text></g><g><title>&lt;core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy&gt;::matching (1,003,009 samples, 0.10%)</title><rect x="89.0672%" y="85" width="0.1003%" height="15" fill="rgb(209,138,14)" fg:x="890671992" fg:w="1003009"/><text x="89.3172%" y="95.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2,006,018 samples, 0.20%)</title><rect x="89.1675%" y="85" width="0.2006%" height="15" fill="rgb(222,18,33)" fg:x="891675001" fg:w="2006018"/><text x="89.4175%" y="95.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2,006,018 samples, 0.20%)</title><rect x="89.1675%" y="69" width="0.2006%" height="15" fill="rgb(213,199,7)" fg:x="891675001" fg:w="2006018"/><text x="89.4175%" y="79.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2,006,018 samples, 0.20%)</title><rect x="89.1675%" y="53" width="0.2006%" height="15" fill="rgb(250,110,10)" fg:x="891675001" fg:w="2006018"/><text x="89.4175%" y="63.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (70,210,630 samples, 7.02%)</title><rect x="82.4473%" y="309" width="7.0211%" height="15" fill="rgb(248,123,6)" fg:x="824473398" fg:w="70210630"/><text x="82.6973%" y="319.50">&lt;core::it..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (70,210,630 samples, 7.02%)</title><rect x="82.4473%" y="293" width="7.0211%" height="15" fill="rgb(206,91,31)" fg:x="824473398" fg:w="70210630"/><text x="82.6973%" y="303.50">&lt;core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (69,207,621 samples, 6.92%)</title><rect x="82.5476%" y="277" width="6.9208%" height="15" fill="rgb(211,154,13)" fg:x="825476407" fg:w="69207621"/><text x="82.7976%" y="287.50">core::ite..</text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (64,192,576 samples, 6.42%)</title><rect x="83.0491%" y="261" width="6.4193%" height="15" fill="rgb(225,148,7)" fg:x="830491452" fg:w="64192576"/><text x="83.2991%" y="271.50">core::it..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::_{{closure}} (64,192,576 samples, 6.42%)</title><rect x="83.0491%" y="245" width="6.4193%" height="15" fill="rgb(220,160,43)" fg:x="830491452" fg:w="64192576"/><text x="83.2991%" y="255.50">&lt;core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (62,186,558 samples, 6.22%)</title><rect x="83.2497%" y="229" width="6.2187%" height="15" fill="rgb(213,52,39)" fg:x="832497470" fg:w="62186558"/><text x="83.4997%" y="239.50">core::it..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (62,186,558 samples, 6.22%)</title><rect x="83.2497%" y="213" width="6.2187%" height="15" fill="rgb(243,137,7)" fg:x="832497470" fg:w="62186558"/><text x="83.4997%" y="223.50">core::op..</text></g><g><title>aoc_2024_megaproject::problems::day7::Part::evaluate_line::_{{closure}} (62,186,558 samples, 6.22%)</title><rect x="83.2497%" y="197" width="6.2187%" height="15" fill="rgb(230,79,13)" fg:x="832497470" fg:w="62186558"/><text x="83.4997%" y="207.50">aoc_2024..</text></g><g><title>core::iter::traits::iterator::Iterator::count (62,186,558 samples, 6.22%)</title><rect x="83.2497%" y="181" width="6.2187%" height="15" fill="rgb(247,105,23)" fg:x="832497470" fg:w="62186558"/><text x="83.4997%" y="191.50">core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (62,186,558 samples, 6.22%)</title><rect x="83.2497%" y="165" width="6.2187%" height="15" fill="rgb(223,179,41)" fg:x="832497470" fg:w="62186558"/><text x="83.4997%" y="175.50">core::it..</text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (60,180,540 samples, 6.02%)</title><rect x="83.4504%" y="149" width="6.0181%" height="15" fill="rgb(218,9,34)" fg:x="834503488" fg:w="60180540"/><text x="83.7004%" y="159.50">&lt;core::s..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (59,177,531 samples, 5.92%)</title><rect x="83.5507%" y="133" width="5.9178%" height="15" fill="rgb(222,106,8)" fg:x="835506497" fg:w="59177531"/><text x="83.8007%" y="143.50">core::st..</text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (46,138,414 samples, 4.61%)</title><rect x="84.8546%" y="117" width="4.6138%" height="15" fill="rgb(211,220,0)" fg:x="848545614" fg:w="46138414"/><text x="85.1046%" y="127.50">&lt;core..</text></g><g><title>core::str::pattern::TwoWaySearcher::next (41,123,369 samples, 4.11%)</title><rect x="85.3561%" y="101" width="4.1123%" height="15" fill="rgb(229,52,16)" fg:x="853560659" fg:w="41123369"/><text x="85.6061%" y="111.50">core..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1,003,009 samples, 0.10%)</title><rect x="89.3681%" y="85" width="0.1003%" height="15" fill="rgb(212,155,18)" fg:x="893681019" fg:w="1003009"/><text x="89.6181%" y="95.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1,003,009 samples, 0.10%)</title><rect x="89.3681%" y="69" width="0.1003%" height="15" fill="rgb(242,21,14)" fg:x="893681019" fg:w="1003009"/><text x="89.6181%" y="79.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (72,216,648 samples, 7.22%)</title><rect x="82.4473%" y="341" width="7.2217%" height="15" fill="rgb(222,19,48)" fg:x="824473398" fg:w="72216648"/><text x="82.6973%" y="351.50">&lt;core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (72,216,648 samples, 7.22%)</title><rect x="82.4473%" y="325" width="7.2217%" height="15" fill="rgb(232,45,27)" fg:x="824473398" fg:w="72216648"/><text x="82.6973%" y="335.50">core::iter..</text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (2,006,018 samples, 0.20%)</title><rect x="89.4684%" y="309" width="0.2006%" height="15" fill="rgb(249,103,42)" fg:x="894684028" fg:w="2006018"/><text x="89.7184%" y="319.50"></text></g><g><title>&lt;core::str::iter::RSplit&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (13,039,117 samples, 1.30%)</title><rect x="89.7693%" y="245" width="1.3039%" height="15" fill="rgb(246,81,33)" fg:x="897693055" fg:w="13039117"/><text x="90.0193%" y="255.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_back (13,039,117 samples, 1.30%)</title><rect x="89.7693%" y="229" width="1.3039%" height="15" fill="rgb(252,33,42)" fg:x="897693055" fg:w="13039117"/><text x="90.0193%" y="239.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::ReverseSearcher&gt;::next_match_back (1,003,009 samples, 0.10%)</title><rect x="90.9729%" y="213" width="0.1003%" height="15" fill="rgb(209,212,41)" fg:x="909729163" fg:w="1003009"/><text x="91.2229%" y="223.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next_back (1,003,009 samples, 0.10%)</title><rect x="90.9729%" y="197" width="0.1003%" height="15" fill="rgb(207,154,6)" fg:x="909729163" fg:w="1003009"/><text x="91.2229%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,006,018 samples, 0.20%)</title><rect x="97.8937%" y="69" width="0.2006%" height="15" fill="rgb(223,64,47)" fg:x="978936784" fg:w="2006018"/><text x="98.1437%" y="79.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (2,006,018 samples, 0.20%)</title><rect x="97.8937%" y="53" width="0.2006%" height="15" fill="rgb(211,161,38)" fg:x="978936784" fg:w="2006018"/><text x="98.1437%" y="63.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (2,006,018 samples, 0.20%)</title><rect x="97.8937%" y="37" width="0.2006%" height="15" fill="rgb(219,138,40)" fg:x="978936784" fg:w="2006018"/><text x="98.1437%" y="47.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (73,219,657 samples, 7.32%)</title><rect x="91.3741%" y="165" width="7.3220%" height="15" fill="rgb(241,228,46)" fg:x="913741199" fg:w="73219657"/><text x="91.6241%" y="175.50">core::iter..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (73,219,657 samples, 7.32%)</title><rect x="91.3741%" y="149" width="7.3220%" height="15" fill="rgb(223,209,38)" fg:x="913741199" fg:w="73219657"/><text x="91.6241%" y="159.50">core::iter..</text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (71,213,639 samples, 7.12%)</title><rect x="91.5747%" y="133" width="7.1214%" height="15" fill="rgb(236,164,45)" fg:x="915747217" fg:w="71213639"/><text x="91.8247%" y="143.50">&lt;core::str..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (70,210,630 samples, 7.02%)</title><rect x="91.6750%" y="117" width="7.0211%" height="15" fill="rgb(231,15,5)" fg:x="916750226" fg:w="70210630"/><text x="91.9250%" y="127.50">core::str..</text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (56,168,504 samples, 5.62%)</title><rect x="93.0792%" y="101" width="5.6169%" height="15" fill="rgb(252,35,15)" fg:x="930792352" fg:w="56168504"/><text x="93.3292%" y="111.50">&lt;core::..</text></g><g><title>core::str::pattern::TwoWaySearcher::next (51,153,459 samples, 5.12%)</title><rect x="93.5807%" y="85" width="5.1153%" height="15" fill="rgb(248,181,18)" fg:x="935807397" fg:w="51153459"/><text x="93.8307%" y="95.50">core::..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get (6,018,054 samples, 0.60%)</title><rect x="98.0943%" y="69" width="0.6018%" height="15" fill="rgb(233,39,42)" fg:x="980942802" fg:w="6018054"/><text x="98.3443%" y="79.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (6,018,054 samples, 0.60%)</title><rect x="98.0943%" y="53" width="0.6018%" height="15" fill="rgb(238,110,33)" fg:x="980942802" fg:w="6018054"/><text x="98.3443%" y="63.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1,003,009 samples, 0.10%)</title><rect x="98.8967%" y="101" width="0.1003%" height="15" fill="rgb(233,195,10)" fg:x="988966874" fg:w="1003009"/><text x="99.1467%" y="111.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1,003,009 samples, 0.10%)</title><rect x="98.8967%" y="85" width="0.1003%" height="15" fill="rgb(254,105,3)" fg:x="988966874" fg:w="1003009"/><text x="99.1467%" y="95.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1,003,009 samples, 0.10%)</title><rect x="98.8967%" y="69" width="0.1003%" height="15" fill="rgb(221,225,9)" fg:x="988966874" fg:w="1003009"/><text x="99.1467%" y="79.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (94,282,846 samples, 9.43%)</title><rect x="89.6690%" y="293" width="9.4283%" height="15" fill="rgb(224,227,45)" fg:x="896690046" fg:w="94282846"/><text x="89.9190%" y="303.50">&lt;core::iter::..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (94,282,846 samples, 9.43%)</title><rect x="89.6690%" y="277" width="9.4283%" height="15" fill="rgb(229,198,43)" fg:x="896690046" fg:w="94282846"/><text x="89.9190%" y="287.50">&lt;core::iter::..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (93,279,837 samples, 9.33%)</title><rect x="89.7693%" y="261" width="9.3280%" height="15" fill="rgb(206,209,35)" fg:x="897693055" fg:w="93279837"/><text x="90.0193%" y="271.50">core::iter::t..</text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (80,240,720 samples, 8.02%)</title><rect x="91.0732%" y="245" width="8.0241%" height="15" fill="rgb(245,195,53)" fg:x="910732172" fg:w="80240720"/><text x="91.3232%" y="255.50">core::iter:..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::_{{closure}} (80,240,720 samples, 8.02%)</title><rect x="91.0732%" y="229" width="8.0241%" height="15" fill="rgb(240,92,26)" fg:x="910732172" fg:w="80240720"/><text x="91.3232%" y="239.50">&lt;core::iter..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (77,231,693 samples, 7.72%)</title><rect x="91.3741%" y="213" width="7.7232%" height="15" fill="rgb(207,40,23)" fg:x="913741199" fg:w="77231693"/><text x="91.6241%" y="223.50">core::iter:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (77,231,693 samples, 7.72%)</title><rect x="91.3741%" y="197" width="7.7232%" height="15" fill="rgb(223,111,35)" fg:x="913741199" fg:w="77231693"/><text x="91.6241%" y="207.50">core::ops::..</text></g><g><title>aoc_2024_megaproject::problems::day7::Part::evaluate_line::_{{closure}} (77,231,693 samples, 7.72%)</title><rect x="91.3741%" y="181" width="7.7232%" height="15" fill="rgb(229,147,28)" fg:x="913741199" fg:w="77231693"/><text x="91.6241%" y="191.50">aoc_2024_me..</text></g><g><title>core::str::&lt;impl str&gt;::split (4,012,036 samples, 0.40%)</title><rect x="98.6961%" y="165" width="0.4012%" height="15" fill="rgb(211,29,28)" fg:x="986960856" fg:w="4012036"/><text x="98.9461%" y="175.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (4,012,036 samples, 0.40%)</title><rect x="98.6961%" y="149" width="0.4012%" height="15" fill="rgb(228,72,33)" fg:x="986960856" fg:w="4012036"/><text x="98.9461%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (3,009,027 samples, 0.30%)</title><rect x="98.7964%" y="133" width="0.3009%" height="15" fill="rgb(205,214,31)" fg:x="987963865" fg:w="3009027"/><text x="99.0464%" y="143.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (2,006,018 samples, 0.20%)</title><rect x="98.8967%" y="117" width="0.2006%" height="15" fill="rgb(224,111,15)" fg:x="988966874" fg:w="2006018"/><text x="99.1467%" y="127.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (1,003,009 samples, 0.10%)</title><rect x="98.9970%" y="101" width="0.1003%" height="15" fill="rgb(253,21,26)" fg:x="989969883" fg:w="1003009"/><text x="99.2470%" y="111.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,003,009 samples, 0.10%)</title><rect x="98.9970%" y="85" width="0.1003%" height="15" fill="rgb(245,139,43)" fg:x="989969883" fg:w="1003009"/><text x="99.2470%" y="95.50"></text></g><g><title>aoc_2024_megaproject::problems::day7::Part::can_reach_sum_backward (955,867,577 samples, 95.59%)</title><rect x="3.6108%" y="517" width="95.5868%" height="15" fill="rgb(252,170,7)" fg:x="36108324" fg:w="955867577"/><text x="3.8608%" y="527.50">aoc_2024_megaproject::problems::day7::Part::can_reach_sum_backward</text></g><g><title>aoc_2024_megaproject::problems::day7::Part::can_reach_sum_backward (904,714,118 samples, 90.47%)</title><rect x="8.7262%" y="501" width="90.4714%" height="15" fill="rgb(231,118,14)" fg:x="87261783" fg:w="904714118"/><text x="8.9762%" y="511.50">aoc_2024_megaproject::problems::day7::Part::can_reach_sum_backward</text></g><g><title>aoc_2024_megaproject::problems::day7::Part::can_reach_sum_backward (853,560,659 samples, 85.36%)</title><rect x="13.8415%" y="485" width="85.3561%" height="15" fill="rgb(238,83,0)" fg:x="138415242" fg:w="853560659"/><text x="14.0915%" y="495.50">aoc_2024_megaproject::problems::day7::Part::can_reach_sum_backward</text></g><g><title>aoc_2024_megaproject::problems::day7::Part::can_reach_sum_backward (786,359,056 samples, 78.64%)</title><rect x="20.5617%" y="469" width="78.6359%" height="15" fill="rgb(221,39,39)" fg:x="205616845" fg:w="786359056"/><text x="20.8117%" y="479.50">aoc_2024_megaproject::problems::day7::Part::can_reach_sum_backward</text></g><g><title>aoc_2024_megaproject::problems::day7::Part::can_reach_sum_backward (713,139,399 samples, 71.31%)</title><rect x="27.8837%" y="453" width="71.3139%" height="15" fill="rgb(222,119,46)" fg:x="278836502" fg:w="713139399"/><text x="28.1337%" y="463.50">aoc_2024_megaproject::problems::day7::Part::can_reach_sum_backward</text></g><g><title>aoc_2024_megaproject::problems::day7::Part::can_reach_sum_backward (614,844,517 samples, 61.48%)</title><rect x="37.7131%" y="437" width="61.4845%" height="15" fill="rgb(222,165,49)" fg:x="377131384" fg:w="614844517"/><text x="37.9631%" y="447.50">aoc_2024_megaproject::problems::day7::Part::can_reach_sum_backward</text></g><g><title>aoc_2024_megaproject::problems::day7::Part::can_reach_sum_backward (537,612,824 samples, 53.76%)</title><rect x="45.4363%" y="421" width="53.7613%" height="15" fill="rgb(219,113,52)" fg:x="454363077" fg:w="537612824"/><text x="45.6863%" y="431.50">aoc_2024_megaproject::problems::day7::Part::can_reach_sum_backward</text></g><g><title>aoc_2024_megaproject::problems::day7::Part::can_reach_sum_backward (438,314,933 samples, 43.83%)</title><rect x="55.3661%" y="405" width="43.8315%" height="15" fill="rgb(214,7,15)" fg:x="553660968" fg:w="438314933"/><text x="55.6161%" y="415.50">aoc_2024_megaproject::problems::day7::Part::can_reach_sum_backward</text></g><g><title>aoc_2024_megaproject::problems::day7::Part::can_reach_sum_backward (359,077,222 samples, 35.91%)</title><rect x="63.2899%" y="389" width="35.9077%" height="15" fill="rgb(235,32,4)" fg:x="632898679" fg:w="359077222"/><text x="63.5399%" y="399.50">aoc_2024_megaproject::problems::day7::Part::can_reach_sum_..</text></g><g><title>aoc_2024_megaproject::problems::day7::Part::can_reach_sum_backward (263,791,367 samples, 26.38%)</title><rect x="72.8185%" y="373" width="26.3791%" height="15" fill="rgb(238,90,54)" fg:x="728184534" fg:w="263791367"/><text x="73.0685%" y="383.50">aoc_2024_megaproject::problems::day7::Part..</text></g><g><title>aoc_2024_megaproject::problems::day7::Part::can_reach_sum_backward (168,505,512 samples, 16.85%)</title><rect x="82.3470%" y="357" width="16.8506%" height="15" fill="rgb(213,208,19)" fg:x="823470389" fg:w="168505512"/><text x="82.5970%" y="367.50">aoc_2024_megaproject::prob..</text></g><g><title>aoc_2024_megaproject::problems::day7::Part::can_reach_sum_backward (95,285,855 samples, 9.53%)</title><rect x="89.6690%" y="341" width="9.5286%" height="15" fill="rgb(233,156,4)" fg:x="896690046" fg:w="95285855"/><text x="89.9190%" y="351.50">aoc_2024_megap..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (95,285,855 samples, 9.53%)</title><rect x="89.6690%" y="325" width="9.5286%" height="15" fill="rgb(207,194,5)" fg:x="896690046" fg:w="95285855"/><text x="89.9190%" y="335.50">&lt;core::iter::a..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (95,285,855 samples, 9.53%)</title><rect x="89.6690%" y="309" width="9.5286%" height="15" fill="rgb(206,111,30)" fg:x="896690046" fg:w="95285855"/><text x="89.9190%" y="319.50">core::iter::tr..</text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (1,003,009 samples, 0.10%)</title><rect x="99.0973%" y="293" width="0.1003%" height="15" fill="rgb(243,70,54)" fg:x="990972892" fg:w="1003009"/><text x="99.3473%" y="303.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (2,006,018 samples, 0.20%)</title><rect x="99.1976%" y="517" width="0.2006%" height="15" fill="rgb(242,28,8)" fg:x="991975901" fg:w="2006018"/><text x="99.4476%" y="527.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for usize&gt;::from_str (2,006,018 samples, 0.20%)</title><rect x="99.1976%" y="501" width="0.2006%" height="15" fill="rgb(219,106,18)" fg:x="991975901" fg:w="2006018"/><text x="99.4476%" y="511.50"></text></g><g><title>core::num::&lt;impl usize&gt;::from_str_radix (2,006,018 samples, 0.20%)</title><rect x="99.1976%" y="485" width="0.2006%" height="15" fill="rgb(244,222,10)" fg:x="991975901" fg:w="2006018"/><text x="99.4476%" y="495.50"></text></g><g><title>core::num::&lt;impl usize&gt;::from_ascii_radix (2,006,018 samples, 0.20%)</title><rect x="99.1976%" y="469" width="0.2006%" height="15" fill="rgb(236,179,52)" fg:x="991975901" fg:w="2006018"/><text x="99.4476%" y="479.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::to_digit (1,003,009 samples, 0.10%)</title><rect x="99.2979%" y="453" width="0.1003%" height="15" fill="rgb(213,23,39)" fg:x="992978910" fg:w="1003009"/><text x="99.5479%" y="463.50"></text></g><g><title>core::str::&lt;impl str&gt;::rsplit (1,003,009 samples, 0.10%)</title><rect x="99.3982%" y="517" width="0.1003%" height="15" fill="rgb(238,48,10)" fg:x="993981919" fg:w="1003009"/><text x="99.6482%" y="527.50"></text></g><g><title>core::str::&lt;impl str&gt;::split (1,003,009 samples, 0.10%)</title><rect x="99.3982%" y="501" width="0.1003%" height="15" fill="rgb(251,196,23)" fg:x="993981919" fg:w="1003009"/><text x="99.6482%" y="511.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1,003,009 samples, 0.10%)</title><rect x="99.3982%" y="485" width="0.1003%" height="15" fill="rgb(250,152,24)" fg:x="993981919" fg:w="1003009"/><text x="99.6482%" y="495.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1,003,009 samples, 0.10%)</title><rect x="99.3982%" y="469" width="0.1003%" height="15" fill="rgb(209,150,17)" fg:x="993981919" fg:w="1003009"/><text x="99.6482%" y="479.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1,003,009 samples, 0.10%)</title><rect x="99.3982%" y="453" width="0.1003%" height="15" fill="rgb(234,202,34)" fg:x="993981919" fg:w="1003009"/><text x="99.6482%" y="463.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (1,003,009 samples, 0.10%)</title><rect x="99.3982%" y="437" width="0.1003%" height="15" fill="rgb(253,148,53)" fg:x="993981919" fg:w="1003009"/><text x="99.6482%" y="447.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,003,009 samples, 0.10%)</title><rect x="99.3982%" y="421" width="0.1003%" height="15" fill="rgb(218,129,16)" fg:x="993981919" fg:w="1003009"/><text x="99.6482%" y="431.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (3,009,027 samples, 0.30%)</title><rect x="99.4985%" y="453" width="0.3009%" height="15" fill="rgb(216,85,19)" fg:x="994984928" fg:w="3009027"/><text x="99.7485%" y="463.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3,009,027 samples, 0.30%)</title><rect x="99.4985%" y="437" width="0.3009%" height="15" fill="rgb(235,228,7)" fg:x="994984928" fg:w="3009027"/><text x="99.7485%" y="447.50"></text></g><g><title>[libc.so.6] (2,006,018 samples, 0.20%)</title><rect x="99.5988%" y="421" width="0.2006%" height="15" fill="rgb(245,175,0)" fg:x="995987937" fg:w="2006018"/><text x="99.8488%" y="431.50"></text></g><g><title>aoc_2024_megaproject::Day::run_part (998,996,964 samples, 99.90%)</title><rect x="0.0000%" y="661" width="99.8997%" height="15" fill="rgb(208,168,36)" fg:x="0" fg:w="998996964"/><text x="0.2500%" y="671.50">aoc_2024_megaproject::Day::run_part</text></g><g><title>&lt;aoc_2024_megaproject::problems::day7::Day7 as aoc_2024_megaproject::Day&gt;::part1 (998,996,964 samples, 99.90%)</title><rect x="0.0000%" y="645" width="99.8997%" height="15" fill="rgb(246,171,24)" fg:x="0" fg:w="998996964"/><text x="0.2500%" y="655.50">&lt;aoc_2024_megaproject::problems::day7::Day7 as aoc_2024_megaproject::Day&gt;::part1</text></g><g><title>core::iter::traits::iterator::Iterator::sum (998,996,964 samples, 99.90%)</title><rect x="0.0000%" y="629" width="99.8997%" height="15" fill="rgb(215,142,24)" fg:x="0" fg:w="998996964"/><text x="0.2500%" y="639.50">core::iter::traits::iterator::Iterator::sum</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (998,996,964 samples, 99.90%)</title><rect x="0.0000%" y="613" width="99.8997%" height="15" fill="rgb(250,187,7)" fg:x="0" fg:w="998996964"/><text x="0.2500%" y="623.50">&lt;usize as core::iter::traits::accum::Sum&gt;::sum</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (998,996,964 samples, 99.90%)</title><rect x="0.0000%" y="597" width="99.8997%" height="15" fill="rgb(228,66,33)" fg:x="0" fg:w="998996964"/><text x="0.2500%" y="607.50">&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>core::iter::traits::iterator::Iterator::fold (998,996,964 samples, 99.90%)</title><rect x="0.0000%" y="581" width="99.8997%" height="15" fill="rgb(234,215,21)" fg:x="0" fg:w="998996964"/><text x="0.2500%" y="591.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (987,963,865 samples, 98.80%)</title><rect x="1.1033%" y="565" width="98.7964%" height="15" fill="rgb(222,191,20)" fg:x="11033099" fg:w="987963865"/><text x="1.3533%" y="575.50">core::iter::adapters::filter_map::filter_map_fold::_{{closure}}</text></g><g><title>&lt;aoc_2024_megaproject::problems::day7::Day7 as aoc_2024_megaproject::Day&gt;::part1::_{{closure}} (987,963,865 samples, 98.80%)</title><rect x="1.1033%" y="549" width="98.7964%" height="15" fill="rgb(245,79,54)" fg:x="11033099" fg:w="987963865"/><text x="1.3533%" y="559.50">&lt;aoc_2024_megaproject::problems::day7::Day7 as aoc_2024_megaproject::Day&gt;::part1::_{{closure}}</text></g><g><title>aoc_2024_megaproject::problems::day7::Part::evaluate_line (987,963,865 samples, 98.80%)</title><rect x="1.1033%" y="533" width="98.7964%" height="15" fill="rgb(240,10,37)" fg:x="11033099" fg:w="987963865"/><text x="1.3533%" y="543.50">aoc_2024_megaproject::problems::day7::Part::evaluate_line</text></g><g><title>core::str::&lt;impl str&gt;::split (4,012,036 samples, 0.40%)</title><rect x="99.4985%" y="517" width="0.4012%" height="15" fill="rgb(214,192,32)" fg:x="994984928" fg:w="4012036"/><text x="99.7485%" y="527.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (4,012,036 samples, 0.40%)</title><rect x="99.4985%" y="501" width="0.4012%" height="15" fill="rgb(209,36,54)" fg:x="994984928" fg:w="4012036"/><text x="99.7485%" y="511.50"></text></g><g><title>core::str::pattern::StrSearcher::new (4,012,036 samples, 0.40%)</title><rect x="99.4985%" y="485" width="0.4012%" height="15" fill="rgb(220,10,11)" fg:x="994984928" fg:w="4012036"/><text x="99.7485%" y="495.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (4,012,036 samples, 0.40%)</title><rect x="99.4985%" y="469" width="0.4012%" height="15" fill="rgb(221,106,17)" fg:x="994984928" fg:w="4012036"/><text x="99.7485%" y="479.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::reverse_maximal_suffix (1,003,009 samples, 0.10%)</title><rect x="99.7994%" y="453" width="0.1003%" height="15" fill="rgb(251,142,44)" fg:x="997993955" fg:w="1003009"/><text x="100.0494%" y="463.50"></text></g><g><title>all (999,999,973 samples, 100%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(238,13,15)" fg:x="0" fg:w="999999973"/><text x="0.2500%" y="991.50"></text></g><g><title>aoc-2024-megapr (999,999,973 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(208,107,27)" fg:x="0" fg:w="999999973"/><text x="0.2500%" y="975.50">aoc-2024-megapr</text></g><g><title>_start (999,999,973 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(205,136,37)" fg:x="0" fg:w="999999973"/><text x="0.2500%" y="959.50">_start</text></g><g><title>__libc_start_main (999,999,973 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(250,205,27)" fg:x="0" fg:w="999999973"/><text x="0.2500%" y="943.50">__libc_start_main</text></g><g><title>[libc.so.6] (999,999,973 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(210,80,43)" fg:x="0" fg:w="999999973"/><text x="0.2500%" y="927.50">[libc.so.6]</text></g><g><title>main (999,999,973 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(247,160,36)" fg:x="0" fg:w="999999973"/><text x="0.2500%" y="911.50">main</text></g><g><title>std::rt::lang_start_internal (999,999,973 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(234,13,49)" fg:x="0" fg:w="999999973"/><text x="0.2500%" y="895.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (999,999,973 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(234,122,0)" fg:x="0" fg:w="999999973"/><text x="0.2500%" y="879.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (999,999,973 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(207,146,38)" fg:x="0" fg:w="999999973"/><text x="0.2500%" y="863.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (999,999,973 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(207,177,25)" fg:x="0" fg:w="999999973"/><text x="0.2500%" y="847.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (999,999,973 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(211,178,42)" fg:x="0" fg:w="999999973"/><text x="0.2500%" y="831.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (999,999,973 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(230,69,54)" fg:x="0" fg:w="999999973"/><text x="0.2500%" y="815.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (999,999,973 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(214,135,41)" fg:x="0" fg:w="999999973"/><text x="0.2500%" y="799.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (999,999,973 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(237,67,25)" fg:x="0" fg:w="999999973"/><text x="0.2500%" y="783.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (999,999,973 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(222,189,50)" fg:x="0" fg:w="999999973"/><text x="0.2500%" y="767.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (999,999,973 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(245,148,34)" fg:x="0" fg:w="999999973"/><text x="0.2500%" y="751.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (999,999,973 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(222,29,6)" fg:x="0" fg:w="999999973"/><text x="0.2500%" y="735.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (999,999,973 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(221,189,43)" fg:x="0" fg:w="999999973"/><text x="0.2500%" y="719.50">core::ops::function::FnOnce::call_once</text></g><g><title>aoc_2024_megaproject::main (999,999,973 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(207,36,27)" fg:x="0" fg:w="999999973"/><text x="0.2500%" y="703.50">aoc_2024_megaproject::main</text></g><g><title>aoc_2024_megaproject::repeat_part (999,999,973 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(217,90,24)" fg:x="0" fg:w="999999973"/><text x="0.2500%" y="687.50">aoc_2024_megaproject::repeat_part</text></g><g><title>regex::regex::string::Regex::new (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="661" width="0.1003%" height="15" fill="rgb(224,66,35)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="671.50"></text></g><g><title>regex::builders::string::RegexBuilder::build (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="645" width="0.1003%" height="15" fill="rgb(221,13,50)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="655.50"></text></g><g><title>regex::builders::Builder::build_one_string (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="629" width="0.1003%" height="15" fill="rgb(236,68,49)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="639.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="613" width="0.1003%" height="15" fill="rgb(229,146,28)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="623.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="597" width="0.1003%" height="15" fill="rgb(225,31,38)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="607.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="581" width="0.1003%" height="15" fill="rgb(250,208,3)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="591.50"></text></g><g><title>regex_automata::meta::strategy::new (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="565" width="0.1003%" height="15" fill="rgb(246,54,23)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="575.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="549" width="0.1003%" height="15" fill="rgb(243,76,11)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="533" width="0.1003%" height="15" fill="rgb(245,21,50)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="517" width="0.1003%" height="15" fill="rgb(228,9,43)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="501" width="0.1003%" height="15" fill="rgb(208,100,47)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="485" width="0.1003%" height="15" fill="rgb(232,26,8)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="469" width="0.1003%" height="15" fill="rgb(216,166,38)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="453" width="0.1003%" height="15" fill="rgb(251,202,51)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="463.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::_{{closure}} (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="437" width="0.1003%" height="15" fill="rgb(254,216,34)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="447.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="421" width="0.1003%" height="15" fill="rgb(251,32,27)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="431.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="405" width="0.1003%" height="15" fill="rgb(208,127,28)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="415.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="389" width="0.1003%" height="15" fill="rgb(224,137,22)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="373" width="0.1003%" height="15" fill="rgb(254,70,32)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="357" width="0.1003%" height="15" fill="rgb(229,75,37)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="367.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="341" width="0.1003%" height="15" fill="rgb(252,64,23)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="351.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::_{{closure}} (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="325" width="0.1003%" height="15" fill="rgb(232,162,48)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="335.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="309" width="0.1003%" height="15" fill="rgb(246,160,12)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="319.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_at_least (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="293" width="0.1003%" height="15" fill="rgb(247,166,0)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="303.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="277" width="0.1003%" height="15" fill="rgb(249,219,21)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="287.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="261" width="0.1003%" height="15" fill="rgb(205,209,3)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="271.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::new (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="245" width="0.1003%" height="15" fill="rgb(243,44,1)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="255.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8State::clear (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="229" width="0.1003%" height="15" fill="rgb(206,159,16)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="239.50"></text></g><g><title>regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="213" width="0.1003%" height="15" fill="rgb(244,77,30)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="223.50"></text></g><g><title>alloc::vec::from_elem (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="197" width="0.1003%" height="15" fill="rgb(218,69,12)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="207.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="181" width="0.1003%" height="15" fill="rgb(212,87,7)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="165" width="0.1003%" height="15" fill="rgb(245,114,25)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="175.50"></text></g><g><title>core::ptr::write (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="149" width="0.1003%" height="15" fill="rgb(210,61,42)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="159.50"></text></g><g><title>[unknown] (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="133" width="0.1003%" height="15" fill="rgb(211,52,33)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="143.50"></text></g><g><title>[unknown] (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="117" width="0.1003%" height="15" fill="rgb(234,58,33)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="127.50"></text></g><g><title>[unknown] (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="101" width="0.1003%" height="15" fill="rgb(220,115,36)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="111.50"></text></g><g><title>[unknown] (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="85" width="0.1003%" height="15" fill="rgb(243,153,54)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="95.50"></text></g><g><title>[unknown] (1,003,009 samples, 0.10%)</title><rect x="99.8997%" y="69" width="0.1003%" height="15" fill="rgb(251,47,18)" fg:x="998996964" fg:w="1003009"/><text x="100.1497%" y="79.50"></text></g></svg></svg>